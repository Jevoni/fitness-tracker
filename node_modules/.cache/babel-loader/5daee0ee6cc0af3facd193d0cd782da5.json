{"ast":null,"code":"import _toConsumableArray from \"/Users/jalenjohnson/Desktop/ReactPortfolio/fitness-tracker/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/jalenjohnson/Desktop/ReactPortfolio/fitness-tracker/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/Users/jalenjohnson/Desktop/ReactPortfolio/fitness-tracker/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\n\n/**\n * React Router DOM v6.4.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_enhanceManualRouteObjects, Router, useHref, createPath, useResolvedPath, useMatch, UNSAFE_DataRouterStateContext, useNavigate, useLocation, UNSAFE_DataRouterContext, UNSAFE_RouteContext, useMatches, useNavigation } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, RouterProvider, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_DataStaticRouterContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_enhanceManualRouteObjects, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, renderMatches, resolvePath, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { createRouter, createBrowserHistory, createHashHistory, matchPath, invariant } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar defaultMethod = \"get\";\nvar defaultEncType = \"application/x-www-form-urlencoded\";\n\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && ( // Ignore everything but left clicks\n  !target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\n\n\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce(function (memo, key) {\n    var value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(function (v) {\n      return [key, v];\n    }) : [[key, value]]);\n  }, []));\n}\n\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  var searchParams = createSearchParams(locationSearch);\n\n  var _iterator = _createForOfIteratorHelper(defaultSearchParams.keys()),\n      _step;\n\n  try {\n    var _loop = function _loop() {\n      var key = _step.value;\n\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(function (value) {\n          searchParams.append(key, value);\n        });\n      }\n    };\n\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return searchParams;\n}\n\nfunction getFormSubmissionInfo(target, defaultAction, options) {\n  var method;\n  var action;\n  var encType;\n  var formData;\n\n  if (isFormElement(target)) {\n    var submissionTrigger = options.submissionTrigger;\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"action\") || defaultAction;\n    encType = options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    var form = target.form;\n\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    } // <button>/<input type=\"submit\"> may override attributes of <form>\n\n\n    method = options.method || target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"formaction\") || form.getAttribute(\"action\") || defaultAction;\n    encType = options.encType || target.getAttribute(\"formenctype\") || form.getAttribute(\"enctype\") || defaultEncType;\n    formData = new FormData(form); // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || defaultAction;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        var _iterator2 = _createForOfIteratorHelper(target),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _step2$value = _slicedToArray(_step2.value, 2),\n                name = _step2$value[0],\n                value = _step2$value[1];\n\n            formData.append(name, value);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      } else if (target != null) {\n        for (var _i = 0, _Object$keys = Object.keys(target); _i < _Object$keys.length; _i++) {\n          var _name = _Object$keys[_i];\n          formData.append(_name, target[_name]);\n        }\n      }\n    }\n  }\n\n  var _window$location = window.location,\n      protocol = _window$location.protocol,\n      host = _window$location.host;\n  var url = new URL(action, protocol + \"//\" + host);\n  return {\n    url: url,\n    method: method,\n    encType: encType,\n    formData: formData\n  };\n}\n\nvar _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\"],\n    _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"children\"],\n    _excluded3 = [\"reloadDocument\", \"replace\", \"method\", \"action\", \"onSubmit\", \"fetcherKey\", \"routeId\", \"relative\"]; //#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\nfunction createBrowserRouter(routes, opts) {\n  var _window;\n\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || ((_window = window) == null ? void 0 : _window.__staticRouterHydrationData),\n    routes: UNSAFE_enhanceManualRouteObjects(routes)\n  }).initialize();\n}\n\nfunction createHashRouter(routes, opts) {\n  var _window2;\n\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || ((_window2 = window) == null ? void 0 : _window2.__staticRouterHydrationData),\n    routes: UNSAFE_enhanceManualRouteObjects(routes)\n  }).initialize();\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\n\n\nfunction BrowserRouter(_ref) {\n  var basename = _ref.basename,\n      children = _ref.children,\n      window = _ref.window;\n  var historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window: window,\n      v5Compat: true\n    });\n  }\n\n  var history = historyRef.current;\n\n  var _React$useState = React.useState({\n    action: history.action,\n    location: history.location\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  React.useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\n\n\nfunction HashRouter(_ref2) {\n  var basename = _ref2.basename,\n      children = _ref2.children,\n      window = _ref2.window;\n  var historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window: window,\n      v5Compat: true\n    });\n  }\n\n  var history = historyRef.current;\n\n  var _React$useState3 = React.useState({\n    action: history.action,\n    location: history.location\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      state = _React$useState4[0],\n      setState = _React$useState4[1];\n\n  React.useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\n\n\nfunction HistoryRouter(_ref3) {\n  var basename = _ref3.basename,\n      children = _ref3.children,\n      history = _ref3.history;\n\n  var _React$useState5 = React.useState({\n    action: history.action,\n    location: history.location\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      state = _React$useState6[0],\n      setState = _React$useState6[1];\n\n  React.useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n/**\n * The public API for rendering a history-aware <a>.\n */\n\n\nvar Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref4, ref) {\n  var onClick = _ref4.onClick,\n      relative = _ref4.relative,\n      reloadDocument = _ref4.reloadDocument,\n      replace = _ref4.replace,\n      state = _ref4.state,\n      target = _ref4.target,\n      to = _ref4.to,\n      preventScrollReset = _ref4.preventScrollReset,\n      rest = _objectWithoutPropertiesLoose(_ref4, _excluded);\n\n  var href = useHref(to, {\n    relative: relative\n  });\n  var internalOnClick = useLinkClickHandler(to, {\n    replace: replace,\n    state: state,\n    target: target,\n    preventScrollReset: preventScrollReset,\n    relative: relative\n  });\n\n  function handleClick(event) {\n    if (onClick) onClick(event);\n\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: href,\n      onClick: reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\n\n\nvar NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref5, ref) {\n  var _ref5$ariaCurrent = _ref5[\"aria-current\"],\n      ariaCurrentProp = _ref5$ariaCurrent === void 0 ? \"page\" : _ref5$ariaCurrent,\n      _ref5$caseSensitive = _ref5.caseSensitive,\n      caseSensitive = _ref5$caseSensitive === void 0 ? false : _ref5$caseSensitive,\n      _ref5$className = _ref5.className,\n      classNameProp = _ref5$className === void 0 ? \"\" : _ref5$className,\n      _ref5$end = _ref5.end,\n      end = _ref5$end === void 0 ? false : _ref5$end,\n      styleProp = _ref5.style,\n      to = _ref5.to,\n      children = _ref5.children,\n      rest = _objectWithoutPropertiesLoose(_ref5, _excluded2);\n\n  var path = useResolvedPath(to);\n  var match = useMatch({\n    path: path.pathname,\n    end: end,\n    caseSensitive: caseSensitive\n  });\n  var routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  var nextLocation = routerState == null ? void 0 : routerState.navigation.location;\n  var nextPath = useResolvedPath(nextLocation || \"\");\n  var nextMatch = React.useMemo(function () {\n    return nextLocation ? matchPath({\n      path: path.pathname,\n      end: end,\n      caseSensitive: caseSensitive\n    }, nextPath.pathname) : null;\n  }, [nextLocation, path.pathname, caseSensitive, end, nextPath.pathname]);\n  var isPending = nextMatch != null;\n  var isActive = match != null;\n  var ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  var className;\n\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp({\n      isActive: isActive,\n      isPending: isPending\n    });\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null].filter(Boolean).join(\" \");\n  }\n\n  var style = typeof styleProp === \"function\" ? styleProp({\n    isActive: isActive,\n    isPending: isPending\n  }) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to\n  }), typeof children === \"function\" ? children({\n    isActive: isActive,\n    isPending: isPending\n  }) : children);\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\n\n\nvar Form = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n    ref: ref\n  }));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n\nvar FormImpl = /*#__PURE__*/React.forwardRef(function (_ref6, forwardedRef) {\n  var reloadDocument = _ref6.reloadDocument,\n      replace = _ref6.replace,\n      _ref6$method = _ref6.method,\n      method = _ref6$method === void 0 ? defaultMethod : _ref6$method,\n      action = _ref6.action,\n      onSubmit = _ref6.onSubmit,\n      fetcherKey = _ref6.fetcherKey,\n      routeId = _ref6.routeId,\n      relative = _ref6.relative,\n      props = _objectWithoutPropertiesLoose(_ref6, _excluded3);\n\n  var submit = useSubmitImpl(fetcherKey, routeId);\n  var formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  var formAction = useFormAction(action, {\n    relative: relative\n  });\n\n  var submitHandler = function submitHandler(event) {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    var submitter = event.nativeEvent.submitter;\n    submit(submitter || event.currentTarget, {\n      method: method,\n      replace: replace,\n      relative: relative\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\n\n\nfunction ScrollRestoration(_ref7) {\n  var getKey = _ref7.getKey,\n      storageKey = _ref7.storageKey;\n  useScrollRestoration({\n    getKey: getKey,\n    storageKey: storageKey\n  });\n  return null;\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\n\n\nfunction useLinkClickHandler(to, _temp) {\n  var _ref8 = _temp === void 0 ? {} : _temp,\n      target = _ref8.target,\n      replaceProp = _ref8.replace,\n      state = _ref8.state,\n      preventScrollReset = _ref8.preventScrollReset,\n      relative = _ref8.relative;\n\n  var navigate = useNavigate();\n  var location = useLocation();\n  var path = useResolvedPath(to, {\n    relative: relative\n  });\n  return React.useCallback(function (event) {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n\n      var replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace: replace,\n        state: state,\n        preventScrollReset: preventScrollReset,\n        relative: relative\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\n\n\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  var defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  var location = useLocation();\n  var searchParams = React.useMemo(function () {\n    return getSearchParamsForLocation(location.search, defaultSearchParamsRef.current);\n  }, [location.search]);\n  var navigate = useNavigate();\n  var setSearchParams = React.useCallback(function (nextInit, navigateOptions) {\n    var newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\n\n\nfunction useSubmit() {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(fetcherKey, routeId) {\n  var dataRouterContext = React.useContext(UNSAFE_DataRouterContext);\n  !dataRouterContext ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useSubmitImpl must be used within a Data Router\") : invariant(false) : void 0;\n  var router = dataRouterContext.router;\n  var defaultAction = useFormAction();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof document === \"undefined\") {\n      throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n    }\n\n    var _getFormSubmissionInf = getFormSubmissionInfo(target, defaultAction, options),\n        method = _getFormSubmissionInf.method,\n        encType = _getFormSubmissionInf.encType,\n        formData = _getFormSubmissionInf.formData,\n        url = _getFormSubmissionInf.url;\n\n    var href = url.pathname + url.search;\n    var opts = {\n      replace: options.replace,\n      formData: formData,\n      formMethod: method,\n      formEncType: encType\n    };\n\n    if (fetcherKey) {\n      !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No routeId available for useFetcher()\") : invariant(false) : void 0;\n      router.fetch(fetcherKey, routeId, href, opts);\n    } else {\n      router.navigate(href, opts);\n    }\n  }, [defaultAction, router, fetcherKey, routeId]);\n}\n\nfunction useFormAction(action, _temp2) {\n  var _ref9 = _temp2 === void 0 ? {} : _temp2,\n      relative = _ref9.relative;\n\n  var routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFormAction must be used inside a RouteContext\") : invariant(false) : void 0;\n\n  var _routeContext$matches = routeContext.matches.slice(-1),\n      _routeContext$matches2 = _slicedToArray(_routeContext$matches, 1),\n      match = _routeContext$matches2[0];\n\n  var resolvedAction = action != null ? action : \".\";\n  var path = useResolvedPath(resolvedAction, {\n    relative: relative\n  }); // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n\n  var location = useLocation();\n\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash; // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n\n    if (match.route.index) {\n      var params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey, routeId) {\n  var FetcherForm = /*#__PURE__*/React.forwardRef(function (props, ref) {\n    return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n      ref: ref,\n      fetcherKey: fetcherKey,\n      routeId: routeId\n    }));\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n\n  return FetcherForm;\n}\n\nvar fetcherId = 0;\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\n\nfunction useFetcher() {\n  var _route$matches;\n\n  var dataRouterContext = React.useContext(UNSAFE_DataRouterContext);\n  !dataRouterContext ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFetcher must be used within a Data Router\") : invariant(false) : void 0;\n  var router = dataRouterContext.router;\n  var route = React.useContext(UNSAFE_RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFetcher must be used inside a RouteContext\") : invariant(false) : void 0;\n  var routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : invariant(false) : void 0;\n\n  var _React$useState7 = React.useState(function () {\n    return String(++fetcherId);\n  }),\n      _React$useState8 = _slicedToArray(_React$useState7, 1),\n      fetcherKey = _React$useState8[0];\n\n  var _React$useState9 = React.useState(function () {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No routeId available for fetcher.Form()\") : invariant(false) : void 0;\n    return createFetcherForm(fetcherKey, routeId);\n  }),\n      _React$useState10 = _slicedToArray(_React$useState9, 1),\n      Form = _React$useState10[0];\n\n  var _React$useState11 = React.useState(function () {\n    return function (href) {\n      !router ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No router available for fetcher.load()\") : invariant(false) : void 0;\n      !routeId ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No routeId available for fetcher.load()\") : invariant(false) : void 0;\n      router.fetch(fetcherKey, routeId, href);\n    };\n  }),\n      _React$useState12 = _slicedToArray(_React$useState11, 1),\n      load = _React$useState12[0];\n\n  var submit = useSubmitImpl(fetcherKey, routeId);\n  var fetcher = router.getFetcher(fetcherKey);\n  var fetcherWithComponents = React.useMemo(function () {\n    return _extends({\n      Form: Form,\n      submit: submit,\n      load: load\n    }, fetcher);\n  }, [fetcher, Form, submit, load]);\n  React.useEffect(function () {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return function () {\n      if (!router) {\n        console.warn(\"No fetcher available to clean up from useFetcher()\");\n        return;\n      }\n\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\n\n\nfunction useFetchers() {\n  var state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFetchers must be used within a DataRouterStateContext\") : invariant(false) : void 0;\n  return _toConsumableArray(state.fetchers.values());\n}\n\nvar SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nvar savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\n\nfunction useScrollRestoration(_temp3) {\n  var _ref10 = _temp3 === void 0 ? {} : _temp3,\n      getKey = _ref10.getKey,\n      storageKey = _ref10.storageKey;\n\n  var location = useLocation();\n  var matches = useMatches();\n  var navigation = useNavigation();\n  var dataRouterContext = React.useContext(UNSAFE_DataRouterContext);\n  !dataRouterContext ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useScrollRestoration must be used within a DataRouterContext\") : invariant(false) : void 0;\n  var router = dataRouterContext.router;\n  var state = React.useContext(UNSAFE_DataRouterStateContext);\n  !(router != null && state != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useScrollRestoration must be used within a DataRouterStateContext\") : invariant(false) : void 0;\n  var restoreScrollPosition = state.restoreScrollPosition,\n      preventScrollReset = state.preventScrollReset; // Trigger manual scroll restoration while we're active\n\n  React.useEffect(function () {\n    window.history.scrollRestoration = \"manual\";\n    return function () {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []); // Save positions on unload\n\n  useBeforeUnload(React.useCallback(function () {\n    if (navigation.state === \"idle\") {\n      var key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n\n    sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches])); // Read in any saved scroll locations\n\n  React.useLayoutEffect(function () {\n    try {\n      var sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n\n      if (sessionPositions) {\n        savedScrollPositions = JSON.parse(sessionPositions);\n      }\n    } catch (e) {// no-op, use default empty object\n    }\n  }, [storageKey]); // Enable scroll restoration in the router\n\n  React.useLayoutEffect(function () {\n    var disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, function () {\n      return window.scrollY;\n    }, getKey);\n    return function () {\n      return disableScrollRestoration && disableScrollRestoration();\n    };\n  }, [router, getKey]); // Restore scrolling when state.restoreScrollPosition changes\n\n  React.useLayoutEffect(function () {\n    // Explicit false means don't do anything (used for submissions)\n    if (restoreScrollPosition === false) {\n      return;\n    } // been here before, scroll to it\n\n\n    if (typeof restoreScrollPosition === \"number\") {\n      window.scrollTo(0, restoreScrollPosition);\n      return;\n    } // try to scroll to the hash\n\n\n    if (location.hash) {\n      var el = document.getElementById(location.hash.slice(1));\n\n      if (el) {\n        el.scrollIntoView();\n        return;\n      }\n    } // Opt out of scroll reset if this link requested it\n\n\n    if (preventScrollReset === true) {\n      return;\n    } // otherwise go to the top on new locations\n\n\n    window.scrollTo(0, 0);\n  }, [location, restoreScrollPosition, preventScrollReset]);\n}\n\nfunction useBeforeUnload(callback) {\n  React.useEffect(function () {\n    window.addEventListener(\"beforeunload\", callback);\n    return function () {\n      window.removeEventListener(\"beforeunload\", callback);\n    };\n  }, [callback]);\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Utils\n////////////////////////////////////////////////////////////////////////////////\n\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n} //#endregion\n\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, ScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGO,IAAMA,aAAa,GAAG,KAAtB;AACP,IAAMC,cAAc,GAAG,mCAAvB;;AAEM,SAAUC,aAAV,CAAwBC,MAAxB,EAAmC;EACvC,OAAOA,MAAM,IAAI,IAAVA,IAAkB,OAAOA,MAAM,CAACC,OAAd,KAA0B,QAAnD;AACD;;AAEK,SAAUC,eAAV,CAA0BF,MAA1B,EAAqC;EACzC,OAAOD,aAAa,CAACC,MAAD,CAAbD,IAAyBC,MAAM,CAACC,OAAPD,CAAeG,WAAfH,OAAiC,QAAjE;AACD;;AAEK,SAAUI,aAAV,CAAwBJ,MAAxB,EAAmC;EACvC,OAAOD,aAAa,CAACC,MAAD,CAAbD,IAAyBC,MAAM,CAACC,OAAPD,CAAeG,WAAfH,OAAiC,MAAjE;AACD;;AAEK,SAAUK,cAAV,CAAyBL,MAAzB,EAAoC;EACxC,OAAOD,aAAa,CAACC,MAAD,CAAbD,IAAyBC,MAAM,CAACC,OAAPD,CAAeG,WAAfH,OAAiC,OAAjE;AACD;;AAOD,SAASM,eAAT,CAAyBC,KAAzB,EAAiD;EAC/C,OAAO,CAAC,EAAEA,KAAK,CAACC,OAAND,IAAiBA,KAAK,CAACE,MAAvBF,IAAiCA,KAAK,CAACG,OAAvCH,IAAkDA,KAAK,CAACI,QAA1D,CAAR;AACD;;AAEe,gCACdJ,KADc,EAEdK,MAFc,EAEC;EAEf,OACEL,KAAK,CAACM,MAANN,KAAiB,CAAjBA;EACC,CAACK,MAAD,IAAWA,MAAM,KAAK,OADvBL,KACmC;EACnC,CAACD,eAAe,CAACC,KAAD,CAHlB;EAAA;AAKD;AAUD;;;;;;;;;;;;;;;;;;;;AAoBG;;;AACa,4BACdO,IADc,EACgB;EAAA,IAA9BA,IAA8B;IAA9BA,IAA8B,GAAF,EAA5BA;EAA8B;;EAE9B,OAAO,IAAIC,eAAJ,CACL,OAAOD,IAAP,KAAgB,QAAhB,IACAE,KAAK,CAACC,OAAND,CAAcF,IAAdE,CADA,IAEAF,IAAI,YAAYC,eAFhB,GAGID,IAHJ,GAIII,MAAM,CAACC,IAAPD,CAAYJ,IAAZI,EAAkBE,MAAlBF,CAAyB,UAACG,IAAD,EAAOC,GAAP,EAAc;IACrC,IAAIC,KAAK,GAAGT,IAAI,CAACQ,GAAD,CAAhB;IACA,OAAOD,IAAI,CAACG,MAALH,CACLL,KAAK,CAACC,OAAND,CAAcO,KAAdP,IAAuBO,KAAK,CAACE,GAANF,CAAWG,WAAD;MAAA,OAAO,CAACJ,GAAD,EAAMI,CAAN,CAAP;IAAA,CAAVH,CAAvBP,GAAoD,CAAC,CAACM,GAAD,EAAMC,KAAN,CAAD,CAD/CF,CAAP;EAFF,GAKG,EALHH,CALC,CAAP;AAYD;;AAEe,oCACdS,cADc,EAEdC,mBAFc,EAEsB;EAEpC,IAAIC,YAAY,GAAGC,kBAAkB,CAACH,cAAD,CAArC;;EAFoC,2CAIpBC,mBAAmB,CAACT,IAApBS,EAJoB;EAAA;;EAAA;IAAA;MAAA,IAI3BN,GAJ2B;;MAKlC,IAAI,CAACO,YAAY,CAACE,GAAbF,CAAiBP,GAAjBO,CAAL,EAA4B;QAC1BD,mBAAmB,CAACI,MAApBJ,CAA2BN,GAA3BM,EAAgCK,OAAhCL,CAAyCL,eAAD,EAAU;UAChDM,YAAY,CAACK,MAAbL,CAAoBP,GAApBO,EAAyBN,KAAzBM;QADF;MAGD;IATiC;;IAIpC,oDAA4C;MAAA;IAM3C;EAVmC;IAAA;EAAA;IAAA;EAAA;;EAYpC,OAAOA,YAAP;AACD;;SAuCeM,sBACdvB,QAQAwB,eACAC,SAAsB;EAOtB,IAAIC,MAAJ;EACA,IAAIC,MAAJ;EACA,IAAIC,OAAJ;EACA,IAAIC,QAAJ;;EAEA,IAAIrC,aAAa,CAACQ,MAAD,CAAjB,EAA2B;IACzB,IAAI8B,iBAAiB,GACnBL,OACD,CAACK,iBAFF;IAIAJ,MAAM,GAAGD,OAAO,CAACC,MAARD,IAAkBzB,MAAM,CAAC+B,YAAP/B,CAAoB,QAApBA,CAAlByB,IAAmDxC,aAA5DyC;IACAC,MAAM,GAAGF,OAAO,CAACE,MAARF,IAAkBzB,MAAM,CAAC+B,YAAP/B,CAAoB,QAApBA,CAAlByB,IAAmDD,aAA5DG;IACAC,OAAO,GACLH,OAAO,CAACG,OAARH,IAAmBzB,MAAM,CAAC+B,YAAP/B,CAAoB,SAApBA,CAAnByB,IAAqDvC,cADvD0C;IAGAC,QAAQ,GAAG,IAAIG,QAAJ,CAAahC,MAAb,CAAX6B;;IAEA,IAAIC,iBAAiB,IAAIA,iBAAiB,CAACG,IAA3C,EAAiD;MAC/CJ,QAAQ,CAACP,MAATO,CAAgBC,iBAAiB,CAACG,IAAlCJ,EAAwCC,iBAAiB,CAACnB,KAA1DkB;IACD;EAdH,OAeO,IACLvC,eAAe,CAACU,MAAD,CAAfV,IACCG,cAAc,CAACO,MAAD,CAAdP,KACEO,MAAM,CAACkC,IAAPlC,KAAgB,QAAhBA,IAA4BA,MAAM,CAACkC,IAAPlC,KAAgB,OAD9CP,CAFI,EAIL;IACA,IAAI0C,IAAI,GAAGnC,MAAM,CAACmC,IAAlB;;IAEA,IAAIA,IAAI,IAAI,IAAZ,EAAkB;MAChB,MAAM,IAAIC,KAAJ,CAAN,sEAAM,CAAN;IAJF;;;IAWAV,MAAM,GACJD,OAAO,CAACC,MAARD,IACAzB,MAAM,CAAC+B,YAAP/B,CAAoB,YAApBA,CADAyB,IAEAU,IAAI,CAACJ,YAALI,CAAkB,QAAlBA,CAFAV,IAGAxC,aAJFyC;IAKAC,MAAM,GACJF,OAAO,CAACE,MAARF,IACAzB,MAAM,CAAC+B,YAAP/B,CAAoB,YAApBA,CADAyB,IAEAU,IAAI,CAACJ,YAALI,CAAkB,QAAlBA,CAFAV,IAGAD,aAJFG;IAKAC,OAAO,GACLH,OAAO,CAACG,OAARH,IACAzB,MAAM,CAAC+B,YAAP/B,CAAoB,aAApBA,CADAyB,IAEAU,IAAI,CAACJ,YAALI,CAAkB,SAAlBA,CAFAV,IAGAvC,cAJF0C;IAMAC,QAAQ,GAAG,IAAIG,QAAJ,CAAaG,IAAb,CAAXN,CA3BA;IA8BA;;IACA,IAAI7B,MAAM,CAACiC,IAAX,EAAiB;MACfJ,QAAQ,CAACP,MAATO,CAAgB7B,MAAM,CAACiC,IAAvBJ,EAA6B7B,MAAM,CAACW,KAApCkB;IACD;EArCI,OAsCA,IAAI1C,aAAa,CAACa,MAAD,CAAjB,EAA2B;IAChC,MAAM,IAAIoC,KAAJ,CACJ,2FADI,CAAN;EADK,OAKA;IACLV,MAAM,GAAGD,OAAO,CAACC,MAARD,IAAkBxC,aAA3ByC;IACAC,MAAM,GAAGF,OAAO,CAACE,MAARF,IAAkBD,aAA3BG;IACAC,OAAO,GAAGH,OAAO,CAACG,OAARH,IAAmBvC,cAA7B0C;;IAEA,IAAI5B,MAAM,YAAYgC,QAAtB,EAAgC;MAC9BH,QAAQ,GAAG7B,MAAX6B;IADF,OAEO;MACLA,QAAQ,GAAG,IAAIG,QAAJ,EAAXH;;MAEA,IAAI7B,MAAM,YAAYG,eAAtB,EAAuC;QAAA,4CACXH,MADW;QAAA;;QAAA;UACrC,uDAAkC;YAAA;YAAA,IAAxBiC,IAAwB;YAAA,IAAlBtB,KAAkB;;YAChCkB,QAAQ,CAACP,MAATO,CAAgBI,IAAhBJ,EAAsBlB,KAAtBkB;UACD;QAHoC;UAAA;QAAA;UAAA;QAAA;MAAvC,OAIO,IAAI7B,MAAM,IAAI,IAAd,EAAoB;QACzB,gCAAiBM,MAAM,CAACC,IAAPD,CAAYN,MAAZM,CAAjB,kCAAsC;UAAjC,IAAI2B,KAAT,mBAAK;UACHJ,QAAQ,CAACP,MAATO,CAAgBI,KAAhBJ,EAAsB7B,MAAM,CAACiC,KAAD,CAA5BJ;QACD;MACF;IACF;EACF;;EAED,uBAAyBQ,MAAM,CAACC,QAAhC;EAAA,IAAMC,QAAN,oBAAMA,QAAN;EAAA,IAAgBC,IAAhB,oBAAgBA,IAAhB;EACA,IAAIC,GAAG,GAAG,IAAIC,GAAJ,CAAQf,MAAR,EAAmBY,QAAnB,GAAgCC,IAAbD,GAAaC,IAAhC,CAAV;EAEA,OAAO;IAAEC,GAAF,EAAEA,GAAF;IAAOf,MAAP,EAAOA,MAAP;IAAeE,OAAf,EAAeA,OAAf;IAAwBC;EAAxB,CAAP;AACD;;;;qHC3DD;AACA;;AAEgB,6BACdc,MADc,EAEdC,IAFc,EAMb;EAAA;;EAED,OAAOC,YAAY,CAAC;IAClBC,QAAQ,EAAEF,IAAF,IAAEA,oBAAI,CAAEE,QADE;IAElBC,OAAO,EAAEC,oBAAoB,CAAC;MAAEX,MAAM,EAAEO,IAAF,IAAEA,oBAAI,CAAEP;IAAhB,CAAD,CAFX;IAGlBY,aAAa,EAAE,KAAI,QAAJL,gBAAI,CAAEK,aAAN,MAAuBZ,8CAAQa,2BAA/B,CAHG;IAIlBP,MAAM,EAAEQ,gCAAyB,CAACR,MAAD;EAJf,CAAD,CAAZE,CAKJO,UALIP,EAAP;AAMD;;AAEe,0BACdF,MADc,EAEdC,IAFc,EAMb;EAAA;;EAED,OAAOC,YAAY,CAAC;IAClBC,QAAQ,EAAEF,IAAF,IAAEA,oBAAI,CAAEE,QADE;IAElBC,OAAO,EAAEM,iBAAiB,CAAC;MAAEhB,MAAM,EAAEO,IAAF,IAAEA,oBAAI,CAAEP;IAAhB,CAAD,CAFR;IAGlBY,aAAa,EAAE,KAAI,QAAJL,gBAAI,CAAEK,aAAN,MAAuBZ,gDAAQa,2BAA/B,CAHG;IAIlBP,MAAM,EAAEQ,gCAAyB,CAACR,MAAD;EAJf,CAAD,CAAZE,CAKJO,UALIP,EAAP;AAMD;AAaD;;AAEG;;;AACG,SAAUS,aAAV,CAIeC,IAJf,EAIe;EAAA,IAHnBT,QAGmB,QAHnBA,QAGmB;EAAA,IAFnBU,QAEmB,QAFnBA,QAEmB;EAAA,IADnBnB,MACmB,QADnBA,MACmB;EACnB,IAAIoB,UAAU,GAAGC,KAAK,CAACC,MAAND,EAAjB;;EACA,IAAID,UAAU,CAACG,OAAXH,IAAsB,IAA1B,EAAgC;IAC9BA,UAAU,CAACG,OAAXH,GAAqBT,oBAAoB,CAAC;MAAEX,MAAF,EAAEA,MAAF;MAAUwB,QAAQ,EAAE;IAApB,CAAD,CAAzCJ;EACD;;EAED,IAAIV,OAAO,GAAGU,UAAU,CAACG,OAAzB;;EACA,sBAAwBF,KAAK,CAACI,QAANJ,CAAe;IACrC/B,MAAM,EAAEoB,OAAO,CAACpB,MADqB;IAErCW,QAAQ,EAAES,OAAO,CAACT;EAFmB,CAAfoB,CAAxB;EAAA;EAAA,IAAKK,KAAL;EAAA,IAAYC,QAAZ;;EAKAN,KAAK,CAACO,eAANP,CAAsB;IAAA,OAAMX,OAAO,CAACmB,MAARnB,CAAeiB,QAAfjB,CAAN;EAAA,CAAtBW,EAAsD,CAACX,OAAD,CAAtDW;EAEA,oBACEA,oBAACS,MAADT,EAAO;IACLZ,QAAQ,EAAEA,QADL;IAELU,QAAQ,EAAEA,QAFL;IAGLlB,QAAQ,EAAEyB,KAAK,CAACzB,QAHX;IAIL8B,cAAc,EAAEL,KAAK,CAACpC,MAJjB;IAKL0C,SAAS,EAAEtB;EALN,CAAPW,CADF;AASD;AAQD;;;AAGG;;;AACG,SAAUY,UAAV,CAAoEC,KAApE,EAAoE;EAAA,IAA7CzB,QAA6C,SAA7CA,QAA6C;EAAA,IAAnCU,QAAmC,SAAnCA,QAAmC;EAAA,IAAzBnB,MAAyB,SAAzBA,MAAyB;EACxE,IAAIoB,UAAU,GAAGC,KAAK,CAACC,MAAND,EAAjB;;EACA,IAAID,UAAU,CAACG,OAAXH,IAAsB,IAA1B,EAAgC;IAC9BA,UAAU,CAACG,OAAXH,GAAqBJ,iBAAiB,CAAC;MAAEhB,MAAF,EAAEA,MAAF;MAAUwB,QAAQ,EAAE;IAApB,CAAD,CAAtCJ;EACD;;EAED,IAAIV,OAAO,GAAGU,UAAU,CAACG,OAAzB;;EACA,uBAAwBF,KAAK,CAACI,QAANJ,CAAe;IACrC/B,MAAM,EAAEoB,OAAO,CAACpB,MADqB;IAErCW,QAAQ,EAAES,OAAO,CAACT;EAFmB,CAAfoB,CAAxB;EAAA;EAAA,IAAKK,KAAL;EAAA,IAAYC,QAAZ;;EAKAN,KAAK,CAACO,eAANP,CAAsB;IAAA,OAAMX,OAAO,CAACmB,MAARnB,CAAeiB,QAAfjB,CAAN;EAAA,CAAtBW,EAAsD,CAACX,OAAD,CAAtDW;EAEA,oBACEA,oBAACS,MAADT,EAAO;IACLZ,QAAQ,EAAEA,QADL;IAELU,QAAQ,EAAEA,QAFL;IAGLlB,QAAQ,EAAEyB,KAAK,CAACzB,QAHX;IAIL8B,cAAc,EAAEL,KAAK,CAACpC,MAJjB;IAKL0C,SAAS,EAAEtB;EALN,CAAPW,CADF;AASD;AAQD;;;;;AAKG;;;AACH,SAASc,aAAT,CAA0EC,KAA1E,EAA0E;EAAA,IAAjD3B,QAAiD,SAAjDA,QAAiD;EAAA,IAAvCU,QAAuC,SAAvCA,QAAuC;EAAA,IAA7BT,OAA6B,SAA7BA,OAA6B;;EACxE,uBAA0BW,KAAK,CAACI,QAANJ,CAAe;IACvC/B,MAAM,EAAEoB,OAAO,CAACpB,MADuB;IAEvCW,QAAQ,EAAES,OAAO,CAACT;EAFqB,CAAfoB,CAA1B;EAAA;EAAA,IAAOK,KAAP;EAAA,IAAcC,QAAd;;EAKAN,KAAK,CAACO,eAANP,CAAsB;IAAA,OAAMX,OAAO,CAACmB,MAARnB,CAAeiB,QAAfjB,CAAN;EAAA,CAAtBW,EAAsD,CAACX,OAAD,CAAtDW;EAEA,oBACEA,oBAACS,MAADT,EAAO;IACLZ,QAAQ,EAAEA,QADL;IAELU,QAAQ,EAAEA,QAFL;IAGLlB,QAAQ,EAAEyB,KAAK,CAACzB,QAHX;IAIL8B,cAAc,EAAEL,KAAK,CAACpC,MAJjB;IAKL0C,SAAS,EAAEtB;EALN,CAAPW,CADF;AASD;;AAED,IAAagB,qCAAb,EAAa;EACXF,aAAa,CAACG,WAAdH,GAA4B,wBAA5BA;AACD;AAcD;;AAEG;;;AACI,IAAMI,IAAI,gBAAGlB,KAAK,CAACmB,UAANnB,CAClB,SAASoB,WAAT,CAYEC,KAZF,EAYEA,GAZF,EAYK;EAAA,IAVDC,OAUC,SAVDA,OAUC;EAAA,IATDC,QASC,SATDA,QASC;EAAA,IARDC,cAQC,SARDA,cAQC;EAAA,IAPDC,OAOC,SAPDA,OAOC;EAAA,IANDpB,KAMC,SANDA,KAMC;EAAA,IALD/D,MAKC,SALDA,MAKC;EAAA,IAJDoF,EAIC,SAJDA,EAIC;EAAA,IAHDC,kBAGC,SAHDA,kBAGC;EAAA,IAFEC,IAEF;;EAEH,IAAIC,IAAI,GAAGC,OAAO,CAACJ,EAAD,EAAK;IAAEH;EAAF,CAAL,CAAlB;EACA,IAAIQ,eAAe,GAAGC,mBAAmB,CAACN,EAAD,EAAK;IAC5CD,OAD4C,EAC5CA,OAD4C;IAE5CpB,KAF4C,EAE5CA,KAF4C;IAG5C/D,MAH4C,EAG5CA,MAH4C;IAI5CqF,kBAJ4C,EAI5CA,kBAJ4C;IAK5CJ;EAL4C,CAAL,CAAzC;;EAOA,SAASU,WAAT,CACEhG,KADF,EACwD;IAEtD,IAAIqF,OAAJ,EAAaA,OAAO,CAACrF,KAAD,CAAPqF;;IACb,IAAI,CAACrF,KAAK,CAACiG,gBAAX,EAA6B;MAC3BH,eAAe,CAAC9F,KAAD,CAAf8F;IACD;EACF;;EAED;IAAA;IACE;IACA/B,KACM,cADNA,CACM,GADNA,eACM4B,IADN;MAEEC,IAAI,EAAEA,IAFR;MAGEP,OAAO,EAAEE,cAAc,GAAGF,OAAH,GAAaW,WAHtC;MAIEZ,GAAG,EAAEA,GAJP;MAKE/E,MAAM,EAAEA;IALV;EAFF;AAhCgB,EAAb;;AA6CP,IAAa0E,qCAAb,EAAa;EACXE,IAAI,CAACD,WAALC,GAAmB,MAAnBA;AACD;AAuBD;;AAEG;;;AACI,IAAMiB,OAAO,gBAAGnC,KAAK,CAACmB,UAANnB,CACrB,SAASoC,cAAT,CAWEf,KAXF,EAWEA,GAXF,EAWK;EAAA,8BATD,cASC;EAAA,IATegB,eASf,kCATiC,MASjC;EAAA,gCARDC,aAQC;EAAA,IARDA,aAQC,oCARe,KAQf;EAAA,4BAPDC,SAOC;EAAA,IAPUC,aAOV,gCAP0B,EAO1B;EAAA,sBANDC,GAMC;EAAA,IANDA,GAMC,0BANK,KAML;EAAA,IALMC,SAKN,SALDC,KAKC;EAAA,IAJDjB,EAIC,SAJDA,EAIC;EAAA,IAHD5B,QAGC,SAHDA,QAGC;EAAA,IAFE8B,IAEF;;EAEH,IAAIgB,IAAI,GAAGC,eAAe,CAACnB,EAAD,CAA1B;EACA,IAAIoB,KAAK,GAAGC,QAAQ,CAAC;IAAEH,IAAI,EAAEA,IAAI,CAACI,QAAb;IAAuBP,GAAvB,EAAuBA,GAAvB;IAA4BH;EAA5B,CAAD,CAApB;EAEA,IAAIW,WAAW,GAAGjD,KAAK,CAACkD,UAANlD,CAAiBmD,6BAAjBnD,CAAlB;EACA,IAAIoD,YAAY,GAAGH,WAAH,QAAGA,GAAH,MAAGA,cAAW,CAAEI,UAAbJ,CAAwBrE,QAA3C;EACA,IAAI0E,QAAQ,GAAGT,eAAe,CAACO,YAAY,IAAI,EAAjB,CAA9B;EACA,IAAIG,SAAS,GAAGvD,KAAK,CAACwD,OAANxD,CACd;IAAA,OACEoD,YAAY,GACRK,SAAS,CACP;MAAEb,IAAI,EAAEA,IAAI,CAACI,QAAb;MAAuBP,GAAvB,EAAuBA,GAAvB;MAA4BH;IAA5B,CADO,EAEPgB,QAAQ,CAACN,QAFF,CADD,GAKR,IANN;EAAA,CADchD,EAQd,CAACoD,YAAD,EAAeR,IAAI,CAACI,QAApB,EAA8BV,aAA9B,EAA6CG,GAA7C,EAAkDa,QAAQ,CAACN,QAA3D,CARchD,CAAhB;EAWA,IAAI0D,SAAS,GAAGH,SAAS,IAAI,IAA7B;EACA,IAAII,QAAQ,GAAGb,KAAK,IAAI,IAAxB;EAEA,IAAIc,WAAW,GAAGD,QAAQ,GAAGtB,eAAH,GAAqBwB,SAA/C;EAEA,IAAItB,SAAJ;;EACA,IAAI,OAAOC,aAAP,KAAyB,UAA7B,EAAyC;IACvCD,SAAS,GAAGC,aAAa,CAAC;MAAEmB,QAAF,EAAEA,QAAF;MAAYD;IAAZ,CAAD,CAAzBnB;EADF,OAEO;IACL;IACA;IACA;IACA;IACA;IACAA,SAAS,GAAG,CACVC,aADU,EAEVmB,QAAQ,GAAG,QAAH,GAAc,IAFZ,EAGVD,SAAS,GAAG,SAAH,GAAe,IAHd,EAKTI,MALS,CAKFC,OALE,EAMTC,IANS,CAMJ,GANI,CAAZzB;EAOD;;EAED,IAAII,KAAK,GACP,OAAOD,SAAP,KAAqB,UAArB,GACIA,SAAS,CAAC;IAAEiB,QAAF,EAAEA,QAAF;IAAYD;EAAZ,CAAD,CADb,GAEIhB,SAHN;EAKA,oBACE1C,KAAC,cAADA,CAACkB,IAADlB,eACM4B,IADN;IAEgB,2BAFhB;IAGEW,SAAS,EAAEA,SAHb;IAIElB,GAAG,EAAEA,GAJP;IAKEsB,KAAK,EAAEA,KALT;IAMEjB,EAAE,EAAEA;EANN,IAQG,OAAO5B,QAAP,KAAoB,UAApB,GACGA,QAAQ,CAAC;IAAE6D,QAAF,EAAEA,QAAF;IAAYD;EAAZ,CAAD,CADX,GAEG5D,QAVNE,CADF;AA3DmB,EAAhB;;AA4EP,IAAagB,qCAAb,EAAa;EACXmB,OAAO,CAAClB,WAARkB,GAAsB,SAAtBA;AACD;AAwCD;;;;;AAKG;;;AACI,IAAM8B,IAAI,gBAAGjE,KAAK,CAACmB,UAANnB,CAClB,UAACkE,KAAD,EAAQ7C,GAAR,EAAe;EACb,oBAAOrB,oBAACmE,QAADnE,eAAckE,KAAd;IAAqB7C,GAAG,EAAEA;EAA1B,GAAP;AAFgB,EAAb;;AAMP,IAAaL,qCAAb,EAAa;EACXiD,IAAI,CAAChD,WAALgD,GAAmB,MAAnBA;AACD;;AAeD,IAAME,QAAQ,gBAAGnE,KAAK,CAACmB,UAANnB,CACf,iBAYEoE,YAZF,EAaI;EAAA,IAXA5C,cAWA,SAXAA,cAWA;EAAA,IAVAC,OAUA,SAVAA,OAUA;EAAA,yBATAzD,MASA;EAAA,IATAA,MASA,6BATSzC,aAST;EAAA,IARA0C,MAQA,SARAA,MAQA;EAAA,IAPAoG,QAOA,SAPAA,QAOA;EAAA,IANAC,UAMA,SANAA,UAMA;EAAA,IALAC,OAKA,SALAA,OAKA;EAAA,IAJAhD,QAIA,SAJAA,QAIA;EAAA,IAHG2C,KAGH;;EACF,IAAIM,MAAM,GAAGC,aAAa,CAACH,UAAD,EAAaC,OAAb,CAA1B;EACA,IAAIG,UAAU,GACZ1G,MAAM,CAACnC,WAAPmC,OAAyB,KAAzBA,GAAiC,KAAjCA,GAAyC,MAD3C;EAEA,IAAI2G,UAAU,GAAGC,aAAa,CAAC3G,MAAD,EAAS;IAAEsD;EAAF,CAAT,CAA9B;;EACA,IAAIsD,aAAa,GAA6C5I,SAA1D4I,aAA0D5I,MAAD,EAAU;IACrEoI,QAAQ,IAAIA,QAAQ,CAACpI,KAAD,CAApBoI;IACA,IAAIpI,KAAK,CAACiG,gBAAV,EAA4B;IAC5BjG,KAAK,CAAC6I,cAAN7I;IAEA,IAAI8I,SAAS,GAAI9I,KAAoC,CAAC+I,WAArC/I,CACd8I,SADH;IAGAP,MAAM,CAACO,SAAS,IAAI9I,KAAK,CAACgJ,aAApB,EAAmC;MAAEjH,MAAF,EAAEA,MAAF;MAAUyD,OAAV,EAAUA,OAAV;MAAmBF;IAAnB,CAAnC,CAANiD;EARF;;EAWA,oBACExE;IACEqB,GAAG,EAAE+C,YADP;IAEEpG,MAAM,EAAE0G,UAFV;IAGEzG,MAAM,EAAE0G,UAHV;IAIEN,QAAQ,EAAE7C,cAAc,GAAG6C,QAAH,GAAcQ;EAJxC,GAKMX,KALN,EADF;AA9Ba,EAAjB;;AA0CA,IAAalD,qCAAb,EAAa;EACXiD,IAAI,CAAChD,WAALgD,GAAmB,MAAnBA;AACD;AAOD;;;AAGG;;;SACaiB,kBAGSC;EAAA,IAFvBC,MAEuB,SAFvBA,MAEuB;EAAA,IADvBC,UACuB,SADvBA,UACuB;EACvBC,oBAAoB,CAAC;IAAEF,MAAF,EAAEA,MAAF;IAAUC;EAAV,CAAD,CAApBC;EACA,OAAO,IAAP;AACD;;AAED,IAAatE,qCAAb,EAAa;EACXkE,iBAAiB,CAACjE,WAAlBiE,GAAgC,mBAAhCA;AACD,C,CAAA;AAGD;AACA;AACA;;AAEA;;;;AAIG;;;SACalD,oBACdN,IAaM6D;EAAA,+BAAF,EAAE;EAAA,IAXJjJ,MAWI,SAXJA,MAWI;EAAA,IAVKkJ,WAUL,SAVJ/D,OAUI;EAAA,IATJpB,KASI,SATJA,KASI;EAAA,IARJsB,kBAQI,SARJA,kBAQI;EAAA,IAPJJ,QAOI,SAPJA,QAOI;;EAEN,IAAIkE,QAAQ,GAAGC,WAAW,EAA1B;EACA,IAAI9G,QAAQ,GAAG+G,WAAW,EAA1B;EACA,IAAI/C,IAAI,GAAGC,eAAe,CAACnB,EAAD,EAAK;IAAEH;EAAF,CAAL,CAA1B;EAEA,OAAOvB,KAAK,CAAC4F,WAAN5F,CACJ/D,eAAD,EAA2C;IACzC,IAAI4J,sBAAsB,CAAC5J,KAAD,EAAQK,MAAR,CAA1B,EAA2C;MACzCL,KAAK,CAAC6I,cAAN7I,GADyC;MAIzC;;MACA,IAAIwF,OAAO,GACT+D,WAAW,KAAK3B,SAAhB2B,GACIA,WADJA,GAEIM,UAAU,CAAClH,QAAD,CAAVkH,KAAyBA,UAAU,CAAClD,IAAD,CAHzC;MAKA6C,QAAQ,CAAC/D,EAAD,EAAK;QAAED,OAAF,EAAEA,OAAF;QAAWpB,KAAX,EAAWA,KAAX;QAAkBsB,kBAAlB,EAAkBA,kBAAlB;QAAsCJ;MAAtC,CAAL,CAARkE;IACD;EAbE,GAeL,CACE7G,QADF,EAEE6G,QAFF,EAGE7C,IAHF,EAIE4C,WAJF,EAKEnF,KALF,EAME/D,MANF,EAOEoF,EAPF,EAQEC,kBARF,EASEJ,QATF,CAfKvB,CAAP;AA2BD;AAED;;;AAGG;;;AACG,SAAU+F,eAAV,CACJC,WADI,EAC6B;EAEjChF,+CAAO,CACL,OAAOvE,eAAP,KAA2B,WADtB,EAEL,meAFK,CAAP;EAYA,IAAIwJ,sBAAsB,GAAGjG,KAAK,CAACC,MAAND,CAAaxC,kBAAkB,CAACwI,WAAD,CAA/BhG,CAA7B;EAEA,IAAIpB,QAAQ,GAAG+G,WAAW,EAA1B;EACA,IAAIpI,YAAY,GAAGyC,KAAK,CAACwD,OAANxD,CACjB;IAAA,OACEkG,0BAA0B,CACxBtH,QAAQ,CAACuH,MADe,EAExBF,sBAAsB,CAAC/F,OAFC,CAD5B;EAAA,CADiBF,EAMjB,CAACpB,QAAQ,CAACuH,MAAV,CANiBnG,CAAnB;EASA,IAAIyF,QAAQ,GAAGC,WAAW,EAA1B;EACA,IAAIU,eAAe,GAAGpG,KAAK,CAAC4F,WAAN5F,CACpB,UAACqG,QAAD,EAAWC,eAAX,EAA8B;IAC5B,IAAMC,eAAe,GAAG/I,kBAAkB,CACxC,OAAO6I,QAAP,KAAoB,UAApB,GAAiCA,QAAQ,CAAC9I,YAAD,CAAzC,GAA0D8I,QADlB,CAA1C;IAGAZ,QAAQ,CAAC,MAAMc,eAAP,EAAwBD,eAAxB,CAARb;EALkB,GAOpB,CAACA,QAAD,EAAWlI,YAAX,CAPoByC,CAAtB;EAUA,OAAO,CAACzC,YAAD,EAAe6I,eAAf,CAAP;AACD;AAyCD;;;AAGG;;;SACaI,YAAS;EACvB,OAAO/B,aAAa,EAApB;AACD;;AAED,SAASA,aAAT,CAAuBH,UAAvB,EAA4CC,OAA5C,EAA4D;EAC1D,IAAIkC,iBAAiB,GAAGzG,KAAK,CAACkD,UAANlD,CAAiB0G,wBAAjB1G,CAAxB;EACA,CACEyG,iBADF,oDAAS,QAEP,iDAFO,CAAT,YAAS,CAAT,KAAS,CAAT;EAIA,IAAME,MAAN,GAAiBF,iBAAjB,CAAME,MAAN;EACA,IAAI7I,aAAa,GAAG8G,aAAa,EAAjC;EAEA,OAAO5E,KAAK,CAAC4F,WAAN5F,CACL,UAAC1D,MAAD,EAASyB,OAAT,EAAyB;IAAA,IAAhBA,OAAgB;MAAhBA,OAAgB,GAAN,EAAVA;IAAgB;;IACvB,IAAI,OAAO6I,QAAP,KAAoB,WAAxB,EAAqC;MACnC,MAAM,IAAIlI,KAAJ,CACJ,sDACE,8DAFE,CAAN;IAID;;IAED,4BAAyCb,qBAAqB,CAC5DvB,MAD4D,EAE5DwB,aAF4D,EAG5DC,OAH4D,CAA9D;IAAA,IAAMC,MAAN,yBAAMA,MAAN;IAAA,IAAcE,OAAd,yBAAcA,OAAd;IAAA,IAAuBC,QAAvB,yBAAuBA,QAAvB;IAAA,IAAiCY,GAAjC,yBAAiCA,GAAjC;;IAMA,IAAI8C,IAAI,GAAG9C,GAAG,CAACiE,QAAJjE,GAAeA,GAAG,CAACoH,MAA9B;IACA,IAAIjH,IAAI,GAAG;MACTuC,OAAO,EAAE1D,OAAO,CAAC0D,OADR;MAETtD,QAFS,EAETA,QAFS;MAGTuG,UAAU,EAAE1G,MAHH;MAIT6I,WAAW,EAAE3I;IAJJ,CAAX;;IAMA,IAAIoG,UAAJ,EAAgB;MACd,EAAUC,OAAO,IAAI,IAArB,qDAAS,QAAkB,uCAAlB,CAATuC,YAAS,CAAT,KAAS,CAAT;MACAH,MAAM,CAACI,KAAPJ,CAAarC,UAAbqC,EAAyBpC,OAAzBoC,EAAkC9E,IAAlC8E,EAAwCzH,IAAxCyH;IAFF,OAGO;MACLA,MAAM,CAAClB,QAAPkB,CAAgB9E,IAAhB8E,EAAsBzH,IAAtByH;IACD;EA3BE,GA6BL,CAAC7I,aAAD,EAAgB6I,MAAhB,EAAwBrC,UAAxB,EAAoCC,OAApC,CA7BKvE,CAAP;AA+BD;;AAEK,SAAU4E,aAAV,CACJ3G,MADI,EAEiD+I,MAFjD,EAEiD;EAAA,gCAAF,EAAE;EAAA,IAAnDzF,QAAmD,SAAnDA,QAAmD;;EAErD,IAAI0F,YAAY,GAAGjH,KAAK,CAACkD,UAANlD,CAAiBkH,mBAAjBlH,CAAnB;EACA,CAAUiH,YAAV,oDAAS,QAAe,kDAAf,CAAT,YAAS,CAAT,KAAS,CAAT;;EAEA,4BAAcA,YAAY,CAACE,OAAbF,CAAqBG,KAArBH,CAA2B,CAAC,CAA5BA,CAAd;EAAA;EAAA,IAAKnE,KAAL;;EACA,IAAIuE,cAAc,GAAGpJ,MAAH,IAAGA,gBAAU,GAA/B;EACA,IAAI2E,IAAI,GAAGC,eAAe,CAACwE,cAAD,EAAiB;IAAE9F;EAAF,CAAjB,CAA1B,CAPqD;EAUrD;EACA;EACA;EACA;;EACA,IAAI3C,QAAQ,GAAG+G,WAAW,EAA1B;;EACA,IAAI1H,MAAM,IAAI,IAAd,EAAoB;IAClB;IACA;IACA;IACA2E,IAAI,CAACuD,MAALvD,GAAchE,QAAQ,CAACuH,MAAvBvD;IACAA,IAAI,CAAC0E,IAAL1E,GAAYhE,QAAQ,CAAC0I,IAArB1E,CALkB;IAQlB;IACA;;IACA,IAAIE,KAAK,CAACyE,KAANzE,CAAY0E,KAAhB,EAAuB;MACrB,IAAIC,MAAM,GAAG,IAAIhL,eAAJ,CAAoBmG,IAAI,CAACuD,MAAzB,CAAb;MACAsB,MAAM,CAACC,MAAPD,CAAc,OAAdA;MACA7E,IAAI,CAACuD,MAALvD,GAAc6E,MAAM,CAACE,QAAPF,KAAwBA,YAAM,CAACE,QAAPF,EAAxBA,GAA8C,EAA5D7E;IACD;EACF;;EAED,IAAI,CAAC,CAAC3E,MAAD,IAAWA,MAAM,KAAK,GAAvB,KAA+B6E,KAAK,CAACyE,KAANzE,CAAY0E,KAA/C,EAAsD;IACpD5E,IAAI,CAACuD,MAALvD,GAAcA,IAAI,CAACuD,MAALvD,GACVA,IAAI,CAACuD,MAALvD,CAAYnB,OAAZmB,CAAoB,KAApBA,EAA2B,SAA3BA,CADUA,GAEV,QAFJA;EAGD;;EAED,OAAOkD,UAAU,CAAClD,IAAD,CAAjB;AACD;;AAED,SAASgF,iBAAT,CAA2BtD,UAA3B,EAA+CC,OAA/C,EAA8D;EAC5D,IAAIsD,WAAW,gBAAG7H,KAAK,CAACmB,UAANnB,CAChB,UAACkE,KAAD,EAAQ7C,GAAR,EAAe;IACb,oBACErB,KAAC,cAADA,CAACmE,QAADnE,eACMkE,KADN;MAEE7C,GAAG,EAAEA,GAFP;MAGEiD,UAAU,EAAEA,UAHd;MAIEC,OAAO,EAAEA;IAJX,GADF;EAFc,EAAlB;;EAYA,IAAavD,qCAAb,EAAa;IACX6G,WAAW,CAAC5G,WAAZ4G,GAA0B,cAA1BA;EACD;;EACD,OAAOA,WAAP;AACD;;AAED,IAAIC,SAAS,GAAG,CAAhB;AAYA;;;AAGG;;SACaC,aAAU;EAAA;;EACxB,IAAItB,iBAAiB,GAAGzG,KAAK,CAACkD,UAANlD,CAAiB0G,wBAAjB1G,CAAxB;EACA,CAAUyG,iBAAV,oDAAS,CAAT,KAAS,EAAT,8CAAS,CAATK,YAAS,CAAT,KAAS,CAAT;EACA,IAAMH,MAAN,GAAiBF,iBAAjB,CAAME,MAAN;EAEA,IAAIY,KAAK,GAAGvH,KAAK,CAACkD,UAANlD,CAAiBkH,mBAAjBlH,CAAZ;EACA,CAAUuH,KAAV,oDAAS,CAAT,KAAS,EAAT,+CAAS,CAATT,YAAS,CAAT,KAAS,CAAT;EAEA,IAAIvC,OAAO,GAAGgD,uBAAK,CAACJ,OAANI,CAAcA,KAAK,CAACJ,OAANI,CAAcS,MAAdT,GAAuB,CAArCA,MAAH,IAAGA,GAAH,MAAGA,iBAAyCA,MAAzC,CAA+CU,EAA7D;EACA,EACE1D,OAAO,IAAI,IADb,qDAAS,CAAT,KAAS,EAAT,oEAAS,CAAT,YAAS,CAAT,KAAS,CAAT;;EAKA,uBAAmBvE,KAAK,CAACI,QAANJ,CAAe;IAAA,OAAMkI,MAAM,CAAC,EAAEJ,SAAH,CAAZ;EAAA,CAAf9H,CAAnB;EAAA;EAAA,IAAKsE,UAAL;;EACA,uBAAatE,KAAK,CAACI,QAANJ,CAAe,YAAK;IAC/B,CAAUuE,OAAV,oDAAS,CAAT,KAAS,EAAT,yCAAS,CAATuC,YAAS,CAAT,KAAS,CAAT;IACA,OAAOc,iBAAiB,CAACtD,UAAD,EAAaC,OAAb,CAAxB;EAFW,EAAb;EAAA;EAAA,IAAKN,IAAL;;EAIA,wBAAajE,KAAK,CAACI,QAANJ,CAAe;IAAA,OAAO6B,cAAD,EAAiB;MACjD,CAAU8E,MAAV,oDAAS,QAAS,wCAAT,CAAT,YAAS,CAAT,KAAS,CAAT;MACA,CAAUpC,OAAV,oDAAS,QAAU,yCAAV,CAAT,YAAS,CAAT,KAAS,CAAT;MACAoC,MAAM,CAACI,KAAPJ,CAAarC,UAAbqC,EAAyBpC,OAAzBoC,EAAkC9E,IAAlC8E;IAHW,CAAe;EAAA,CAAf3G,CAAb;EAAA;EAAA,IAAKmI,IAAL;;EAKA,IAAI3D,MAAM,GAAGC,aAAa,CAACH,UAAD,EAAaC,OAAb,CAA1B;EAEA,IAAI6D,OAAO,GAAGzB,MAAM,CAAC0B,UAAP1B,CAAyBrC,UAAzBqC,CAAd;EAEA,IAAI2B,qBAAqB,GAAGtI,KAAK,CAACwD,OAANxD,CAC1B;IAAA;MACEiE,IADF,EACEA,IADF;MAEEO,MAFF,EAEEA,MAFF;MAGE2D;IAHF,GAIKC,OAJL;EAAA,CAD0BpI,EAO1B,CAACoI,OAAD,EAAUnE,IAAV,EAAgBO,MAAhB,EAAwB2D,IAAxB,CAP0BnI,CAA5B;EAUAA,KAAK,CAACuI,SAANvI,CAAgB,YAAK;IACnB;IACA;IACA;IACA,OAAO,YAAK;MACV,IAAI,CAAC2G,MAAL,EAAa;QACX6B,OAAO,CAACC,IAARD;QACA;MACD;;MACD7B,MAAM,CAAC+B,aAAP/B,CAAqBrC,UAArBqC;IALF;EAJF,GAWG,CAACA,MAAD,EAASrC,UAAT,CAXHtE;EAaA,OAAOsI,qBAAP;AACD;AAED;;;AAGG;;;SACaK,cAAW;EACzB,IAAItI,KAAK,GAAGL,KAAK,CAACkD,UAANlD,CAAiBmD,6BAAjBnD,CAAZ;EACA,CAAUK,KAAV,oDAAS,CAAT,KAAS,EAAT,0DAAS,CAATyG,YAAS,CAAT,KAAS,CAAT;EACA,0BAAWzG,KAAK,CAACuI,QAANvI,CAAewI,MAAfxI,EAAX;AACD;;AAED,IAAMyI,8BAA8B,GAAG,+BAAvC;AACA,IAAIC,oBAAoB,GAA2B,EAAnD;AAEA;;AAEG;;AACH,SAASzD,oBAAT,CAMM0D,MANN,EAMM;EAAA,iCAAF,EAAE;EAAA,IALJ5D,MAKI,UALJA,MAKI;EAAA,IAJJC,UAII,UAJJA,UAII;;EACJ,IAAIzG,QAAQ,GAAG+G,WAAW,EAA1B;EACA,IAAIwB,OAAO,GAAG8B,UAAU,EAAxB;EACA,IAAI5F,UAAU,GAAG6F,aAAa,EAA9B;EACA,IAAIzC,iBAAiB,GAAGzG,KAAK,CAACkD,UAANlD,CAAiB0G,wBAAjB1G,CAAxB;EACA,CACEyG,iBADF,oDAAS,QAEP,8DAFO,CAAT,YAAS,CAAT,KAAS,CAAT;EAIA,IAAME,MAAN,GAAiBF,iBAAjB,CAAME,MAAN;EACA,IAAItG,KAAK,GAAGL,KAAK,CAACkD,UAANlD,CAAiBmD,6BAAjBnD,CAAZ;EAEA,EACE2G,MAAM,IAAI,IAAVA,IAAkBtG,KAAK,IAAI,IAD7B,qDAAS,CAEP,KAFO,EAEP,mEAFO,CAATyG,YAAS,CAAT,KAAS,CAAT;EAIA,IAAMqC,qBAAN,GAAoD9I,KAApD,CAAM8I,qBAAN;EAAA,IAA6BxH,kBAA7B,GAAoDtB,KAApD,CAA6BsB,kBAA7B,CAhBI;;EAmBJ3B,KAAK,CAACuI,SAANvI,CAAgB,YAAK;IACnBrB,MAAM,CAACU,OAAPV,CAAeyK,iBAAfzK,GAAmC,QAAnCA;IACA,OAAO,YAAK;MACVA,MAAM,CAACU,OAAPV,CAAeyK,iBAAfzK,GAAmC,MAAnCA;IADF;EAFF,GAKG,EALHqB,EAnBI;;EA2BJqJ,eAAe,CACbrJ,KAAK,CAAC4F,WAAN5F,CAAkB,YAAK;IACrB,IAAIqD,UAAU,CAAChD,KAAXgD,KAAqB,MAAzB,EAAiC;MAC/B,IAAIrG,GAAG,GAAG,CAACoI,MAAM,GAAGA,MAAM,CAACxG,QAAD,EAAWuI,OAAX,CAAT,GAA+B,IAAtC,KAA+CvI,QAAQ,CAAC5B,GAAlE;MACA+L,oBAAoB,CAAC/L,GAAD,CAApB+L,GAA4BpK,MAAM,CAAC2K,OAAnCP;IACD;;IACDQ,cAAc,CAACC,OAAfD,CACElE,UAAU,IAAIyD,8BADhBS,EAEEE,IAAI,CAACC,SAALD,CAAeV,oBAAfU,CAFFF;IAIA5K,MAAM,CAACU,OAAPV,CAAeyK,iBAAfzK,GAAmC,MAAnCA;EATF,GAUG,CAAC0G,UAAD,EAAaD,MAAb,EAAqB/B,UAAU,CAAChD,KAAhC,EAAuCzB,QAAvC,EAAiDuI,OAAjD,CAVHnH,CADa,CAAfqJ,CA3BI;;EA0CJrJ,KAAK,CAACO,eAANP,CAAsB,YAAK;IACzB,IAAI;MACF,IAAI2J,gBAAgB,GAAGJ,cAAc,CAACK,OAAfL,CACrBlE,UAAU,IAAIyD,8BADOS,CAAvB;;MAGA,IAAII,gBAAJ,EAAsB;QACpBZ,oBAAoB,GAAGU,IAAI,CAACI,KAALJ,CAAWE,gBAAXF,CAAvBV;MACD;IANH,EAOE,OAAOe,CAAP,EAAU;IAEX;EAVH,GAWG,CAACzE,UAAD,CAXHrF,EA1CI;;EAwDJA,KAAK,CAACO,eAANP,CAAsB,YAAK;IACzB,IAAI+J,wBAAwB,GAAGpD,MAAH,IAAGA,sBAAM,CAAEqD,uBAARrD,CAC7BoC,oBAD6BpC,EAE7B;MAAA,OAAMhI,MAAM,CAAC2K,OAAb;IAAA,CAF6B3C,EAG7BvB,MAH6BuB,CAA/B;IAKA,OAAO;MAAA,OAAMoD,wBAAwB,IAAIA,wBAAwB,EAA1D;IAAA,CAAP;EANF,GAOG,CAACpD,MAAD,EAASvB,MAAT,CAPHpF,EAxDI;;EAkEJA,KAAK,CAACO,eAANP,CAAsB,YAAK;IACzB;IACA,IAAImJ,qBAAqB,KAAK,KAA9B,EAAqC;MACnC;IAHuB;;;IAOzB,IAAI,OAAOA,qBAAP,KAAiC,QAArC,EAA+C;MAC7CxK,MAAM,CAACsL,QAAPtL,CAAgB,CAAhBA,EAAmBwK,qBAAnBxK;MACA;IATuB;;;IAazB,IAAIC,QAAQ,CAAC0I,IAAb,EAAmB;MACjB,IAAI4C,EAAE,GAAGtD,QAAQ,CAACuD,cAATvD,CAAwBhI,QAAQ,CAAC0I,IAAT1I,CAAcwI,KAAdxI,CAAoB,CAApBA,CAAxBgI,CAAT;;MACA,IAAIsD,EAAJ,EAAQ;QACNA,EAAE,CAACE,cAAHF;QACA;MACD;IAlBsB;;;IAsBzB,IAAIvI,kBAAkB,KAAK,IAA3B,EAAiC;MAC/B;IAvBuB;;;IA2BzBhD,MAAM,CAACsL,QAAPtL,CAAgB,CAAhBA,EAAmB,CAAnBA;EA3BF,GA4BG,CAACC,QAAD,EAAWuK,qBAAX,EAAkCxH,kBAAlC,CA5BH3B;AA6BD;;AAED,SAASqJ,eAAT,CAAyBgB,QAAzB,EAA4C;EAC1CrK,KAAK,CAACuI,SAANvI,CAAgB,YAAK;IACnBrB,MAAM,CAAC2L,gBAAP3L,CAAwB,cAAxBA,EAAwC0L,QAAxC1L;IACA,OAAO,YAAK;MACVA,MAAM,CAAC4L,mBAAP5L,CAA2B,cAA3BA,EAA2C0L,QAA3C1L;IADF;EAFF,GAKG,CAAC0L,QAAD,CALHrK;AAMD,C,CAAA;AAID;AACA;AACA;;;AAEA,SAASwK,OAAT,CAAiBC,IAAjB,EAAgCC,OAAhC,EAA+C;EAC7C,IAAI,CAACD,IAAL,EAAW;IACT;IACA,IAAI,OAAOjC,OAAP,KAAmB,WAAvB,EAAoCA,OAAO,CAACC,IAARD,CAAakC,OAAblC;;IAEpC,IAAI;MACF;MACA;MACA;MACA;MACA;MACA,MAAM,IAAI9J,KAAJ,CAAUgM,OAAV,CAAN,CANE;IAAJ,EAQE,OAAOZ,CAAP,EAAU,CAAE;EACf;AACF,C,CAAA","names":["defaultMethod","defaultEncType","isHtmlElement","object","tagName","isButtonElement","toLowerCase","isFormElement","isInputElement","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","target","button","init","URLSearchParams","Array","isArray","Object","keys","reduce","memo","key","value","concat","map","v","locationSearch","defaultSearchParams","searchParams","createSearchParams","has","getAll","forEach","append","getFormSubmissionInfo","defaultAction","options","method","action","encType","formData","submissionTrigger","getAttribute","FormData","name","type","form","Error","window","location","protocol","host","url","URL","routes","opts","createRouter","basename","history","createBrowserHistory","hydrationData","__staticRouterHydrationData","enhanceManualRouteObjects","initialize","createHashHistory","BrowserRouter","_ref","children","historyRef","React","useRef","current","v5Compat","useState","state","setState","useLayoutEffect","listen","Router","navigationType","navigator","HashRouter","_ref2","HistoryRouter","_ref3","process","displayName","Link","forwardRef","LinkWithRef","ref","onClick","relative","reloadDocument","replace","to","preventScrollReset","rest","href","useHref","internalOnClick","useLinkClickHandler","handleClick","defaultPrevented","NavLink","NavLinkWithRef","ariaCurrentProp","caseSensitive","className","classNameProp","end","styleProp","style","path","useResolvedPath","match","useMatch","pathname","routerState","useContext","DataRouterStateContext","nextLocation","navigation","nextPath","nextMatch","useMemo","matchPath","isPending","isActive","ariaCurrent","undefined","filter","Boolean","join","Form","props","FormImpl","forwardedRef","onSubmit","fetcherKey","routeId","submit","useSubmitImpl","formMethod","formAction","useFormAction","submitHandler","preventDefault","submitter","nativeEvent","currentTarget","ScrollRestoration","_ref7","getKey","storageKey","useScrollRestoration","_temp","replaceProp","navigate","useNavigate","useLocation","useCallback","shouldProcessLinkClick","createPath","useSearchParams","defaultInit","defaultSearchParamsRef","getSearchParamsForLocation","search","setSearchParams","nextInit","navigateOptions","newSearchParams","useSubmit","dataRouterContext","DataRouterContext","router","document","formEncType","invariant","fetch","_temp2","routeContext","RouteContext","matches","slice","resolvedAction","hash","route","index","params","delete","toString","createFetcherForm","FetcherForm","fetcherId","useFetcher","length","id","String","load","fetcher","getFetcher","fetcherWithComponents","useEffect","console","warn","deleteFetcher","useFetchers","fetchers","values","SCROLL_RESTORATION_STORAGE_KEY","savedScrollPositions","_temp3","useMatches","useNavigation","restoreScrollPosition","scrollRestoration","useBeforeUnload","scrollY","sessionStorage","setItem","JSON","stringify","sessionPositions","getItem","parse","e","disableScrollRestoration","enableScrollRestoration","scrollTo","el","getElementById","scrollIntoView","callback","addEventListener","removeEventListener","warning","cond","message"],"sources":["/Users/jalenjohnson/Desktop/ReactPortfolio/fitness-tracker/node_modules/react-router-dom/dom.ts","/Users/jalenjohnson/Desktop/ReactPortfolio/fitness-tracker/node_modules/react-router-dom/index.tsx"],"sourcesContent":["import type { FormEncType, FormMethod } from \"@remix-run/router\";\nimport type { RelativeRoutingType } from \"react-router\";\n\nexport const defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  for (let key of defaultSearchParams.keys()) {\n    if (!searchParams.has(key)) {\n      defaultSearchParams.getAll(key).forEach((value) => {\n        searchParams.append(key, value);\n      });\n    }\n  }\n\n  return searchParams;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: FormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   *\n   * Note: It is assumed the path is already resolved. If you need to resolve a\n   * relative path, use `useFormAction`.\n   */\n  action?: string;\n\n  /**\n   * The action URL used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n}\n\nexport function getFormSubmissionInfo(\n  target:\n    | HTMLFormElement\n    | HTMLButtonElement\n    | HTMLInputElement\n    | FormData\n    | URLSearchParams\n    | { [name: string]: string }\n    | null,\n  defaultAction: string,\n  options: SubmitOptions\n): {\n  url: URL;\n  method: string;\n  encType: string;\n  formData: FormData;\n} {\n  let method: string;\n  let action: string;\n  let encType: string;\n  let formData: FormData;\n\n  if (isFormElement(target)) {\n    let submissionTrigger: HTMLButtonElement | HTMLInputElement = (\n      options as any\n    ).submissionTrigger;\n\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"action\") || defaultAction;\n    encType =\n      options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    method =\n      options.method ||\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    action =\n      options.action ||\n      target.getAttribute(\"formaction\") ||\n      form.getAttribute(\"action\") ||\n      defaultAction;\n    encType =\n      options.encType ||\n      target.getAttribute(\"formenctype\") ||\n      form.getAttribute(\"enctype\") ||\n      defaultEncType;\n\n    formData = new FormData(form);\n\n    // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || defaultAction;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n\n  let { protocol, host } = window.location;\n  let url = new URL(action, `${protocol}//${host}`);\n\n  return { url, method, encType, formData };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  NavigateOptions,\n  RelativeRoutingType,\n  RouteObject,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_enhanceManualRouteObjects as enhanceManualRouteObjects,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HydrationState,\n  Router as RemixRouter,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  invariant,\n  matchPath,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteProps,\n  JsonFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_DataStaticRouterContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_enhanceManualRouteObjects,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    window?: Window;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || window?.__staticRouterHydrationData,\n    routes: enhanceManualRouteObjects(routes),\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    window?: Window;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || window?.__staticRouterHydrationData,\n    routes: enhanceManualRouteObjects(routes),\n  }).initialize();\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({ basename, children, history }: HistoryRouterProps) {\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      ...rest\n    },\n    ref\n  ) {\n    let href = useHref(to, { relative });\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={href}\n        onClick={reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean; isPending: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?:\n    | string\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => React.CSSProperties | undefined);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to);\n    let match = useMatch({ path: path.pathname, end, caseSensitive });\n\n    let routerState = React.useContext(DataRouterStateContext);\n    let nextLocation = routerState?.navigation.location;\n    let nextPath = useResolvedPath(nextLocation || \"\");\n    let nextMatch = React.useMemo(\n      () =>\n        nextLocation\n          ? matchPath(\n              { path: path.pathname, end, caseSensitive },\n              nextPath.pathname\n            )\n          : null,\n      [nextLocation, path.pathname, caseSensitive, end, nextPath.pathname]\n    );\n\n    let isPending = nextMatch != null;\n    let isActive = match != null;\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive, isPending });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\"\n        ? styleProp({ isActive, isPending })\n        : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\"\n          ? children({ isActive, isPending })\n          : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: FormMethod;\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    return <FormImpl {...props} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  fetcherKey?: string;\n  routeId?: string;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      fetcherKey,\n      routeId,\n      relative,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmitImpl(fetcherKey, routeId);\n    let formMethod: FormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      submit(submitter || event.currentTarget, { method, replace, relative });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ninterface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, { replace, state, preventScrollReset, relative });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      getSearchParamsForLocation(\n        location.search,\n        defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\ntype SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\ntype SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | { [name: string]: string }\n  | null;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(fetcherKey?: string, routeId?: string): SubmitFunction {\n  let dataRouterContext = React.useContext(DataRouterContext);\n  invariant(\n    dataRouterContext,\n    \"useSubmitImpl must be used within a Data Router\"\n  );\n  let { router } = dataRouterContext;\n  let defaultAction = useFormAction();\n\n  return React.useCallback(\n    (target, options = {}) => {\n      if (typeof document === \"undefined\") {\n        throw new Error(\n          \"You are calling submit during the server render. \" +\n            \"Try calling submit within a `useEffect` or callback instead.\"\n        );\n      }\n\n      let { method, encType, formData, url } = getFormSubmissionInfo(\n        target,\n        defaultAction,\n        options\n      );\n\n      let href = url.pathname + url.search;\n      let opts = {\n        replace: options.replace,\n        formData,\n        formMethod: method as FormMethod,\n        formEncType: encType as FormEncType,\n      };\n      if (fetcherKey) {\n        invariant(routeId != null, \"No routeId available for useFetcher()\");\n        router.fetch(fetcherKey, routeId, href, opts);\n      } else {\n        router.navigate(href, opts);\n      }\n    },\n    [defaultAction, router, fetcherKey, routeId]\n  );\n}\n\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  let resolvedAction = action ?? \".\";\n  let path = useResolvedPath(resolvedAction, { relative });\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FormProps>(\n    (props, ref) => {\n      return (\n        <FormImpl\n          {...props}\n          ref={ref}\n          fetcherKey={fetcherKey}\n          routeId={routeId}\n        />\n      );\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: (\n    target: SubmitTarget,\n    // Fetchers cannot replace because they are not navigation events\n    options?: Omit<SubmitOptions, \"replace\">\n  ) => void;\n  load: (href: string) => void;\n};\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let dataRouterContext = React.useContext(DataRouterContext);\n  invariant(dataRouterContext, `useFetcher must be used within a Data Router`);\n  let { router } = dataRouterContext;\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No fetcher available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, `useFetchers must be used within a DataRouterStateContext`);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  let dataRouterContext = React.useContext(DataRouterContext);\n  invariant(\n    dataRouterContext,\n    \"useScrollRestoration must be used within a DataRouterContext\"\n  );\n  let { router } = dataRouterContext;\n  let state = React.useContext(DataRouterStateContext);\n\n  invariant(\n    router != null && state != null,\n    \"useScrollRestoration must be used within a DataRouterStateContext\"\n  );\n  let { restoreScrollPosition, preventScrollReset } = state;\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on unload\n  useBeforeUnload(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n        JSON.stringify(savedScrollPositions)\n      );\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  React.useLayoutEffect(() => {\n    try {\n      let sessionPositions = sessionStorage.getItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY\n      );\n      if (sessionPositions) {\n        savedScrollPositions = JSON.parse(sessionPositions);\n      }\n    } catch (e) {\n      // no-op, use default empty object\n    }\n  }, [storageKey]);\n\n  // Enable scroll restoration in the router\n  React.useLayoutEffect(() => {\n    let disableScrollRestoration = router?.enableScrollRestoration(\n      savedScrollPositions,\n      () => window.scrollY,\n      getKey\n    );\n    return () => disableScrollRestoration && disableScrollRestoration();\n  }, [router, getKey]);\n\n  // Restore scrolling when state.restoreScrollPosition changes\n  React.useLayoutEffect(() => {\n    // Explicit false means don't do anything (used for submissions)\n    if (restoreScrollPosition === false) {\n      return;\n    }\n\n    // been here before, scroll to it\n    if (typeof restoreScrollPosition === \"number\") {\n      window.scrollTo(0, restoreScrollPosition);\n      return;\n    }\n\n    // try to scroll to the hash\n    if (location.hash) {\n      let el = document.getElementById(location.hash.slice(1));\n      if (el) {\n        el.scrollIntoView();\n        return;\n      }\n    }\n\n    // Opt out of scroll reset if this link requested it\n    if (preventScrollReset === true) {\n      return;\n    }\n\n    // otherwise go to the top on new locations\n    window.scrollTo(0, 0);\n  }, [location, restoreScrollPosition, preventScrollReset]);\n}\n\nfunction useBeforeUnload(callback: () => any): void {\n  React.useEffect(() => {\n    window.addEventListener(\"beforeunload\", callback);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback);\n    };\n  }, [callback]);\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Utils\n////////////////////////////////////////////////////////////////////////////////\n\nfunction warning(cond: boolean, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n//#endregion\n"]},"metadata":{},"sourceType":"module"}