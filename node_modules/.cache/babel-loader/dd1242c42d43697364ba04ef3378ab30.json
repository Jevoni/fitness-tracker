{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"onChange\", \"maxRows\", \"minRows\", \"style\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { flushSync } from 'react-dom';\nimport { unstable_debounce as debounce, unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction getStyleValue(computedStyle, property) {\n  return parseInt(computedStyle[property], 10) || 0;\n}\n\nconst styles = {\n  shadow: {\n    // Visibility needed to hide the extra text area on iPads\n    visibility: 'hidden',\n    // Remove from the content flow\n    position: 'absolute',\n    // Ignore the scrollbar width\n    overflow: 'hidden',\n    height: 0,\n    top: 0,\n    left: 0,\n    // Create a new layer, increase the isolation of the computed values\n    transform: 'translateZ(0)'\n  }\n};\n\nfunction isEmpty(obj) {\n  return obj === undefined || obj === null || Object.keys(obj).length === 0;\n}\n\nconst TextareaAutosize = /*#__PURE__*/React.forwardRef(function TextareaAutosize(props, ref) {\n  const {\n    onChange,\n    maxRows,\n    minRows = 1,\n    style,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    current: isControlled\n  } = React.useRef(value != null);\n  const inputRef = React.useRef(null);\n  const handleRef = useForkRef(ref, inputRef);\n  const shadowRef = React.useRef(null);\n  const renders = React.useRef(0);\n  const [state, setState] = React.useState({});\n  const getUpdatedState = React.useCallback(() => {\n    const input = inputRef.current;\n    const containerWindow = ownerWindow(input);\n    const computedStyle = containerWindow.getComputedStyle(input); // If input's width is shrunk and it's not visible, don't sync height.\n\n    if (computedStyle.width === '0px') {\n      return {};\n    }\n\n    const inputShallow = shadowRef.current;\n    inputShallow.style.width = computedStyle.width;\n    inputShallow.value = input.value || props.placeholder || 'x';\n\n    if (inputShallow.value.slice(-1) === '\\n') {\n      // Certain fonts which overflow the line height will cause the textarea\n      // to report a different scrollHeight depending on whether the last line\n      // is empty. Make it non-empty to avoid this issue.\n      inputShallow.value += ' ';\n    }\n\n    const boxSizing = computedStyle['box-sizing'];\n    const padding = getStyleValue(computedStyle, 'padding-bottom') + getStyleValue(computedStyle, 'padding-top');\n    const border = getStyleValue(computedStyle, 'border-bottom-width') + getStyleValue(computedStyle, 'border-top-width'); // The height of the inner content\n\n    const innerHeight = inputShallow.scrollHeight; // Measure height of a textarea with a single row\n\n    inputShallow.value = 'x';\n    const singleRowHeight = inputShallow.scrollHeight; // The height of the outer content\n\n    let outerHeight = innerHeight;\n\n    if (minRows) {\n      outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);\n    }\n\n    if (maxRows) {\n      outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);\n    }\n\n    outerHeight = Math.max(outerHeight, singleRowHeight); // Take the box sizing into account for applying this value as a style.\n\n    const outerHeightStyle = outerHeight + (boxSizing === 'border-box' ? padding + border : 0);\n    const overflow = Math.abs(outerHeight - innerHeight) <= 1;\n    return {\n      outerHeightStyle,\n      overflow\n    };\n  }, [maxRows, minRows, props.placeholder]);\n\n  const updateState = (prevState, newState) => {\n    const {\n      outerHeightStyle,\n      overflow\n    } = newState; // Need a large enough difference to update the height.\n    // This prevents infinite rendering loop.\n\n    if (renders.current < 20 && (outerHeightStyle > 0 && Math.abs((prevState.outerHeightStyle || 0) - outerHeightStyle) > 1 || prevState.overflow !== overflow)) {\n      renders.current += 1;\n      return {\n        overflow,\n        outerHeightStyle\n      };\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (renders.current === 20) {\n        console.error(['MUI: Too many re-renders. The layout is unstable.', 'TextareaAutosize limits the number of renders to prevent an infinite loop.'].join('\\n'));\n      }\n    }\n\n    return prevState;\n  };\n\n  const syncHeight = React.useCallback(() => {\n    const newState = getUpdatedState();\n\n    if (isEmpty(newState)) {\n      return;\n    }\n\n    setState(prevState => {\n      return updateState(prevState, newState);\n    });\n  }, [getUpdatedState]);\n\n  const syncHeightWithFlushSycn = () => {\n    const newState = getUpdatedState();\n\n    if (isEmpty(newState)) {\n      return;\n    } // In React 18, state updates in a ResizeObserver's callback are happening after the paint which causes flickering\n    // when doing some visual updates in it. Using flushSync ensures that the dom will be painted after the states updates happen\n    // Related issue - https://github.com/facebook/react/issues/24331\n\n\n    flushSync(() => {\n      setState(prevState => {\n        return updateState(prevState, newState);\n      });\n    });\n  };\n\n  React.useEffect(() => {\n    const handleResize = debounce(() => {\n      renders.current = 0; // If the TextareaAutosize component is replaced by Suspense with a fallback, the last\n      // ResizeObserver's handler that runs because of the change in the layout is trying to\n      // access a dom node that is no longer there (as the fallback component is being shown instead).\n      // See https://github.com/mui/material-ui/issues/32640\n\n      if (inputRef.current) {\n        syncHeightWithFlushSycn();\n      }\n    });\n    const containerWindow = ownerWindow(inputRef.current);\n    containerWindow.addEventListener('resize', handleResize);\n    let resizeObserver;\n\n    if (typeof ResizeObserver !== 'undefined') {\n      resizeObserver = new ResizeObserver(handleResize);\n      resizeObserver.observe(inputRef.current);\n    }\n\n    return () => {\n      handleResize.clear();\n      containerWindow.removeEventListener('resize', handleResize);\n\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n      }\n    };\n  });\n  useEnhancedEffect(() => {\n    syncHeight();\n  });\n  React.useEffect(() => {\n    renders.current = 0;\n  }, [value]);\n\n  const handleChange = event => {\n    renders.current = 0;\n\n    if (!isControlled) {\n      syncHeight();\n    }\n\n    if (onChange) {\n      onChange(event);\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(\"textarea\", _extends({\n      value: value,\n      onChange: handleChange,\n      ref: handleRef // Apply the rows prop to get a \"correct\" first SSR paint\n      ,\n      rows: minRows,\n      style: _extends({\n        height: state.outerHeightStyle,\n        // Need a large enough difference to allow scrolling.\n        // This prevents infinite rendering loop.\n        overflow: state.overflow ? 'hidden' : null\n      }, style)\n    }, other)), /*#__PURE__*/_jsx(\"textarea\", {\n      \"aria-hidden\": true,\n      className: props.className,\n      readOnly: true,\n      ref: shadowRef,\n      tabIndex: -1,\n      style: _extends({}, styles.shadow, style, {\n        padding: 0\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TextareaAutosize.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Maximum number of rows to display.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display.\n   * @default 1\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string])\n} : void 0;\nexport default TextareaAutosize;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","flushSync","unstable_debounce","debounce","unstable_useForkRef","useForkRef","unstable_useEnhancedEffect","useEnhancedEffect","unstable_ownerWindow","ownerWindow","jsx","_jsx","jsxs","_jsxs","getStyleValue","computedStyle","property","parseInt","styles","shadow","visibility","position","overflow","height","top","left","transform","isEmpty","obj","undefined","Object","keys","length","TextareaAutosize","forwardRef","props","ref","onChange","maxRows","minRows","style","value","other","current","isControlled","useRef","inputRef","handleRef","shadowRef","renders","state","setState","useState","getUpdatedState","useCallback","input","containerWindow","getComputedStyle","width","inputShallow","placeholder","slice","boxSizing","padding","border","innerHeight","scrollHeight","singleRowHeight","outerHeight","Math","max","Number","min","outerHeightStyle","abs","updateState","prevState","newState","process","env","NODE_ENV","console","error","join","syncHeight","syncHeightWithFlushSycn","useEffect","handleResize","addEventListener","resizeObserver","ResizeObserver","observe","clear","removeEventListener","disconnect","handleChange","event","Fragment","children","rows","className","readOnly","tabIndex","propTypes","string","oneOfType","number","func","object","arrayOf"],"sources":["/Users/jalenjohnson/Desktop/React Portfolio/fitness-tracker/node_modules/@mui/base/TextareaAutosize/TextareaAutosize.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"onChange\", \"maxRows\", \"minRows\", \"style\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { flushSync } from 'react-dom';\nimport { unstable_debounce as debounce, unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction getStyleValue(computedStyle, property) {\n  return parseInt(computedStyle[property], 10) || 0;\n}\n\nconst styles = {\n  shadow: {\n    // Visibility needed to hide the extra text area on iPads\n    visibility: 'hidden',\n    // Remove from the content flow\n    position: 'absolute',\n    // Ignore the scrollbar width\n    overflow: 'hidden',\n    height: 0,\n    top: 0,\n    left: 0,\n    // Create a new layer, increase the isolation of the computed values\n    transform: 'translateZ(0)'\n  }\n};\n\nfunction isEmpty(obj) {\n  return obj === undefined || obj === null || Object.keys(obj).length === 0;\n}\n\nconst TextareaAutosize = /*#__PURE__*/React.forwardRef(function TextareaAutosize(props, ref) {\n  const {\n    onChange,\n    maxRows,\n    minRows = 1,\n    style,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    current: isControlled\n  } = React.useRef(value != null);\n  const inputRef = React.useRef(null);\n  const handleRef = useForkRef(ref, inputRef);\n  const shadowRef = React.useRef(null);\n  const renders = React.useRef(0);\n  const [state, setState] = React.useState({});\n  const getUpdatedState = React.useCallback(() => {\n    const input = inputRef.current;\n    const containerWindow = ownerWindow(input);\n    const computedStyle = containerWindow.getComputedStyle(input); // If input's width is shrunk and it's not visible, don't sync height.\n\n    if (computedStyle.width === '0px') {\n      return {};\n    }\n\n    const inputShallow = shadowRef.current;\n    inputShallow.style.width = computedStyle.width;\n    inputShallow.value = input.value || props.placeholder || 'x';\n\n    if (inputShallow.value.slice(-1) === '\\n') {\n      // Certain fonts which overflow the line height will cause the textarea\n      // to report a different scrollHeight depending on whether the last line\n      // is empty. Make it non-empty to avoid this issue.\n      inputShallow.value += ' ';\n    }\n\n    const boxSizing = computedStyle['box-sizing'];\n    const padding = getStyleValue(computedStyle, 'padding-bottom') + getStyleValue(computedStyle, 'padding-top');\n    const border = getStyleValue(computedStyle, 'border-bottom-width') + getStyleValue(computedStyle, 'border-top-width'); // The height of the inner content\n\n    const innerHeight = inputShallow.scrollHeight; // Measure height of a textarea with a single row\n\n    inputShallow.value = 'x';\n    const singleRowHeight = inputShallow.scrollHeight; // The height of the outer content\n\n    let outerHeight = innerHeight;\n\n    if (minRows) {\n      outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);\n    }\n\n    if (maxRows) {\n      outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);\n    }\n\n    outerHeight = Math.max(outerHeight, singleRowHeight); // Take the box sizing into account for applying this value as a style.\n\n    const outerHeightStyle = outerHeight + (boxSizing === 'border-box' ? padding + border : 0);\n    const overflow = Math.abs(outerHeight - innerHeight) <= 1;\n    return {\n      outerHeightStyle,\n      overflow\n    };\n  }, [maxRows, minRows, props.placeholder]);\n\n  const updateState = (prevState, newState) => {\n    const {\n      outerHeightStyle,\n      overflow\n    } = newState; // Need a large enough difference to update the height.\n    // This prevents infinite rendering loop.\n\n    if (renders.current < 20 && (outerHeightStyle > 0 && Math.abs((prevState.outerHeightStyle || 0) - outerHeightStyle) > 1 || prevState.overflow !== overflow)) {\n      renders.current += 1;\n      return {\n        overflow,\n        outerHeightStyle\n      };\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (renders.current === 20) {\n        console.error(['MUI: Too many re-renders. The layout is unstable.', 'TextareaAutosize limits the number of renders to prevent an infinite loop.'].join('\\n'));\n      }\n    }\n\n    return prevState;\n  };\n\n  const syncHeight = React.useCallback(() => {\n    const newState = getUpdatedState();\n\n    if (isEmpty(newState)) {\n      return;\n    }\n\n    setState(prevState => {\n      return updateState(prevState, newState);\n    });\n  }, [getUpdatedState]);\n\n  const syncHeightWithFlushSycn = () => {\n    const newState = getUpdatedState();\n\n    if (isEmpty(newState)) {\n      return;\n    } // In React 18, state updates in a ResizeObserver's callback are happening after the paint which causes flickering\n    // when doing some visual updates in it. Using flushSync ensures that the dom will be painted after the states updates happen\n    // Related issue - https://github.com/facebook/react/issues/24331\n\n\n    flushSync(() => {\n      setState(prevState => {\n        return updateState(prevState, newState);\n      });\n    });\n  };\n\n  React.useEffect(() => {\n    const handleResize = debounce(() => {\n      renders.current = 0; // If the TextareaAutosize component is replaced by Suspense with a fallback, the last\n      // ResizeObserver's handler that runs because of the change in the layout is trying to\n      // access a dom node that is no longer there (as the fallback component is being shown instead).\n      // See https://github.com/mui/material-ui/issues/32640\n\n      if (inputRef.current) {\n        syncHeightWithFlushSycn();\n      }\n    });\n    const containerWindow = ownerWindow(inputRef.current);\n    containerWindow.addEventListener('resize', handleResize);\n    let resizeObserver;\n\n    if (typeof ResizeObserver !== 'undefined') {\n      resizeObserver = new ResizeObserver(handleResize);\n      resizeObserver.observe(inputRef.current);\n    }\n\n    return () => {\n      handleResize.clear();\n      containerWindow.removeEventListener('resize', handleResize);\n\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n      }\n    };\n  });\n  useEnhancedEffect(() => {\n    syncHeight();\n  });\n  React.useEffect(() => {\n    renders.current = 0;\n  }, [value]);\n\n  const handleChange = event => {\n    renders.current = 0;\n\n    if (!isControlled) {\n      syncHeight();\n    }\n\n    if (onChange) {\n      onChange(event);\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(\"textarea\", _extends({\n      value: value,\n      onChange: handleChange,\n      ref: handleRef // Apply the rows prop to get a \"correct\" first SSR paint\n      ,\n      rows: minRows,\n      style: _extends({\n        height: state.outerHeightStyle,\n        // Need a large enough difference to allow scrolling.\n        // This prevents infinite rendering loop.\n        overflow: state.overflow ? 'hidden' : null\n      }, style)\n    }, other)), /*#__PURE__*/_jsx(\"textarea\", {\n      \"aria-hidden\": true,\n      className: props.className,\n      readOnly: true,\n      ref: shadowRef,\n      tabIndex: -1,\n      style: _extends({}, styles.shadow, style, {\n        padding: 0\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TextareaAutosize.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Maximum number of rows to display.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display.\n   * @default 1\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string])\n} : void 0;\nexport default TextareaAutosize;"],"mappings":"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"},"metadata":{},"sourceType":"module"}