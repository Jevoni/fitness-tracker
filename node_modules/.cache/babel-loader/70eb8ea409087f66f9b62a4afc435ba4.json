{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"badgeContent\", \"component\", \"children\", \"components\", \"componentsProps\", \"invisible\", \"max\", \"showZero\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '../composeClasses';\nimport useBadge from './useBadge';\nimport { getBadgeUnstyledUtilityClass } from './badgeUnstyledClasses';\nimport { useSlotProps } from '../utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    invisible\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', invisible && 'invisible']\n  };\n  return composeClasses(slots, getBadgeUnstyledUtilityClass, undefined);\n};\n/**\n *\n * Demos:\n *\n * - [Unstyled badge](https://mui.com/base/react-badge/)\n *\n * API:\n *\n * - [BadgeUnstyled API](https://mui.com/base/api/badge-unstyled/)\n */\n\n\nconst BadgeUnstyled = /*#__PURE__*/React.forwardRef(function BadgeUnstyled(props, ref) {\n  const {\n    component,\n    children,\n    components = {},\n    componentsProps = {},\n    max: maxProp = 99,\n    showZero = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    badgeContent,\n    max,\n    displayValue,\n    invisible\n  } = useBadge(_extends({}, props, {\n    max: maxProp\n  }));\n\n  const ownerState = _extends({}, props, {\n    badgeContent,\n    invisible,\n    max,\n    showZero\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const Root = component || components.Root || 'span';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: componentsProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref\n    },\n    ownerState,\n    className: classes.root\n  });\n  const Badge = components.Badge || 'span';\n  const badgeProps = useSlotProps({\n    elementType: Badge,\n    externalSlotProps: componentsProps.badge,\n    ownerState,\n    className: classes.badge\n  });\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n    children: [children, /*#__PURE__*/_jsx(Badge, _extends({}, badgeProps, {\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? BadgeUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool\n} : void 0;\nexport default BadgeUnstyled;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","composeClasses","useBadge","getBadgeUnstyledUtilityClass","useSlotProps","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","invisible","slots","root","badge","undefined","BadgeUnstyled","forwardRef","props","ref","component","children","components","componentsProps","max","maxProp","showZero","other","badgeContent","displayValue","classes","Root","rootProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","className","Badge","badgeProps","process","env","NODE_ENV","propTypes","node","shape","oneOfType","func","object","bool","number"],"sources":["/Users/jalenjohnson/Desktop/React Portfolio/fitness-tracker/node_modules/@mui/base/BadgeUnstyled/BadgeUnstyled.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"badgeContent\", \"component\", \"children\", \"components\", \"componentsProps\", \"invisible\", \"max\", \"showZero\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '../composeClasses';\nimport useBadge from './useBadge';\nimport { getBadgeUnstyledUtilityClass } from './badgeUnstyledClasses';\nimport { useSlotProps } from '../utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    invisible\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', invisible && 'invisible']\n  };\n  return composeClasses(slots, getBadgeUnstyledUtilityClass, undefined);\n};\n/**\n *\n * Demos:\n *\n * - [Unstyled badge](https://mui.com/base/react-badge/)\n *\n * API:\n *\n * - [BadgeUnstyled API](https://mui.com/base/api/badge-unstyled/)\n */\n\n\nconst BadgeUnstyled = /*#__PURE__*/React.forwardRef(function BadgeUnstyled(props, ref) {\n  const {\n    component,\n    children,\n    components = {},\n    componentsProps = {},\n    max: maxProp = 99,\n    showZero = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    badgeContent,\n    max,\n    displayValue,\n    invisible\n  } = useBadge(_extends({}, props, {\n    max: maxProp\n  }));\n\n  const ownerState = _extends({}, props, {\n    badgeContent,\n    invisible,\n    max,\n    showZero\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const Root = component || components.Root || 'span';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: componentsProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref\n    },\n    ownerState,\n    className: classes.root\n  });\n  const Badge = components.Badge || 'span';\n  const badgeProps = useSlotProps({\n    elementType: Badge,\n    externalSlotProps: componentsProps.badge,\n    ownerState,\n    className: classes.badge\n  });\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n    children: [children, /*#__PURE__*/_jsx(Badge, _extends({}, badgeProps, {\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? BadgeUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool\n} : void 0;\nexport default BadgeUnstyled;"],"mappings":"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"},"metadata":{},"sourceType":"module"}