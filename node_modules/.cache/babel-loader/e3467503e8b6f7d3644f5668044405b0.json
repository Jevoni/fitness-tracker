{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useControlled as useControlled, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useButton } from '../ButtonUnstyled';\nimport { useListbox, defaultListboxReducer, ActionTypes } from '../ListboxUnstyled';\nimport defaultOptionStringifier from './defaultOptionStringifier';\n\nfunction useSelect(props) {\n  const {\n    buttonRef: buttonRefProp,\n    defaultValue,\n    disabled = false,\n    listboxId,\n    listboxRef: listboxRefProp,\n    multiple = false,\n    onChange,\n    onOpenChange,\n    open = false,\n    options,\n    optionStringifier = defaultOptionStringifier,\n    value: valueProp\n  } = props;\n  const buttonRef = React.useRef(null);\n  const handleButtonRef = useForkRef(buttonRefProp, buttonRef);\n  const listboxRef = React.useRef(null);\n  const [value, setValue] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'SelectUnstyled',\n    state: 'value'\n  }); // prevents closing the listbox on keyUp right after opening it\n\n  const ignoreEnterKeyUp = React.useRef(false); // prevents reopening the listbox when button is clicked\n  // (listbox closes on lost focus, then immediately reopens on click)\n\n  const ignoreClick = React.useRef(false); // Ensure the listbox is focused after opening\n\n  const [listboxFocusRequested, requestListboxFocus] = React.useState(false);\n  const focusListboxIfRequested = React.useCallback(() => {\n    if (listboxFocusRequested && listboxRef.current != null) {\n      listboxRef.current.focus();\n      requestListboxFocus(false);\n    }\n  }, [listboxFocusRequested]);\n\n  const updateListboxRef = listboxElement => {\n    listboxRef.current = listboxElement;\n    focusListboxIfRequested();\n  };\n\n  const handleListboxRef = useForkRef(useForkRef(listboxRefProp, listboxRef), updateListboxRef);\n  React.useEffect(() => {\n    focusListboxIfRequested();\n  }, [focusListboxIfRequested]);\n  React.useEffect(() => {\n    requestListboxFocus(open);\n  }, [open]);\n\n  const createHandleMouseDown = otherHandlers => event => {\n    var _otherHandlers$onMous;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onMous = otherHandlers.onMouseDown) == null ? void 0 : _otherHandlers$onMous.call(otherHandlers, event);\n\n    if (!event.defaultPrevented && open) {\n      ignoreClick.current = true;\n    }\n  };\n\n  const createHandleButtonClick = otherHandlers => event => {\n    var _otherHandlers$onClic;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);\n\n    if (!event.defaultPrevented && !ignoreClick.current) {\n      onOpenChange == null ? void 0 : onOpenChange(!open);\n    }\n\n    ignoreClick.current = false;\n  };\n\n  const createHandleButtonKeyDown = otherHandlers => event => {\n    var _otherHandlers$onKeyD;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (event.key === 'Enter') {\n      ignoreEnterKeyUp.current = true;\n    }\n\n    if (event.key === 'ArrowDown' || event.key === 'ArrowUp') {\n      event.preventDefault();\n      onOpenChange == null ? void 0 : onOpenChange(true);\n    }\n  };\n\n  const createHandleListboxKeyUp = otherHandlers => event => {\n    var _otherHandlers$onKeyU;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onKeyU = otherHandlers.onKeyUp) == null ? void 0 : _otherHandlers$onKeyU.call(otherHandlers, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    const closingKeys = multiple ? ['Escape'] : ['Escape', 'Enter', ' '];\n\n    if (open && !ignoreEnterKeyUp.current && closingKeys.includes(event.key)) {\n      var _buttonRef$current;\n\n      buttonRef == null ? void 0 : (_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.focus();\n    }\n\n    ignoreEnterKeyUp.current = false;\n  };\n\n  const createHandleListboxItemClick = otherHandlers => event => {\n    var _otherHandlers$onClic2;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onClic2 = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic2.call(otherHandlers, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (!multiple) {\n      onOpenChange == null ? void 0 : onOpenChange(false);\n    }\n  };\n\n  const createHandleListboxBlur = otherHandlers => event => {\n    var _otherHandlers$onBlur;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, event);\n\n    if (!event.defaultPrevented) {\n      onOpenChange == null ? void 0 : onOpenChange(false);\n    }\n  };\n\n  const listboxReducer = (state, action) => {\n    const newState = defaultListboxReducer(state, action); // change selection when listbox is closed\n\n    if (action.type === ActionTypes.keyDown && !open && (action.event.key === 'ArrowUp' || action.event.key === 'ArrowDown')) {\n      return _extends({}, newState, {\n        selectedValue: newState.highlightedValue\n      });\n    }\n\n    if (action.type === ActionTypes.blur || action.type === ActionTypes.setValue || action.type === ActionTypes.optionsChange) {\n      return _extends({}, newState, {\n        highlightedValue: newState.selectedValue\n      });\n    }\n\n    return newState;\n  };\n\n  const {\n    getRootProps: getButtonRootProps,\n    active: buttonActive,\n    focusVisible: buttonFocusVisible\n  } = useButton({\n    disabled,\n    ref: handleButtonRef\n  });\n  const selectedOption = React.useMemo(() => {\n    var _props$options$find;\n\n    return props.multiple ? props.options.filter(o => value.includes(o.value)) : (_props$options$find = props.options.find(o => o.value === value)) != null ? _props$options$find : null;\n  }, [props.multiple, props.options, value]);\n  let useListboxParameters;\n\n  if (props.multiple) {\n    const onChangeMultiple = onChange;\n    useListboxParameters = {\n      id: listboxId,\n      isOptionDisabled: o => {\n        var _o$disabled;\n\n        return (_o$disabled = o == null ? void 0 : o.disabled) != null ? _o$disabled : false;\n      },\n      optionComparer: (o, v) => (o == null ? void 0 : o.value) === (v == null ? void 0 : v.value),\n      listboxRef: handleListboxRef,\n      multiple: true,\n      onChange: (e, newOptions) => {\n        const newValues = newOptions.map(o => o.value);\n        setValue(newValues);\n        onChangeMultiple == null ? void 0 : onChangeMultiple(e, newValues);\n      },\n      options,\n      optionStringifier,\n      value: selectedOption\n    };\n  } else {\n    const onChangeSingle = onChange;\n    useListboxParameters = {\n      id: listboxId,\n      isOptionDisabled: o => {\n        var _o$disabled2;\n\n        return (_o$disabled2 = o == null ? void 0 : o.disabled) != null ? _o$disabled2 : false;\n      },\n      optionComparer: (o, v) => (o == null ? void 0 : o.value) === (v == null ? void 0 : v.value),\n      listboxRef: handleListboxRef,\n      multiple: false,\n      onChange: (e, option) => {\n        var _option$value, _option$value2;\n\n        setValue((_option$value = option == null ? void 0 : option.value) != null ? _option$value : null);\n        onChangeSingle == null ? void 0 : onChangeSingle(e, (_option$value2 = option == null ? void 0 : option.value) != null ? _option$value2 : null);\n      },\n      options,\n      optionStringifier,\n      stateReducer: listboxReducer,\n      value: selectedOption\n    };\n  }\n\n  const {\n    getRootProps: getListboxRootProps,\n    getOptionProps: getListboxOptionProps,\n    getOptionState,\n    highlightedOption,\n    selectedOption: listboxSelectedOption\n  } = useListbox(useListboxParameters);\n\n  const getButtonProps = function () {\n    let otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _extends({}, getButtonRootProps(_extends({}, otherHandlers, {\n      onClick: createHandleButtonClick(otherHandlers),\n      onMouseDown: createHandleMouseDown(otherHandlers),\n      onKeyDown: createHandleButtonKeyDown(otherHandlers)\n    })), {\n      'aria-expanded': open,\n      'aria-haspopup': 'listbox'\n    });\n  };\n\n  const getListboxProps = function () {\n    let otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return getListboxRootProps(_extends({}, otherHandlers, {\n      onBlur: createHandleListboxBlur(otherHandlers),\n      onKeyUp: createHandleListboxKeyUp(otherHandlers)\n    }));\n  };\n\n  const getOptionProps = function (option) {\n    let otherHandlers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return getListboxOptionProps(option, _extends({}, otherHandlers, {\n      onClick: createHandleListboxItemClick(otherHandlers)\n    }));\n  };\n\n  React.useDebugValue({\n    selectedOption: listboxSelectedOption,\n    highlightedOption,\n    open\n  });\n  return {\n    buttonActive,\n    buttonFocusVisible,\n    disabled,\n    getButtonProps,\n    getListboxProps,\n    getOptionProps,\n    getOptionState,\n    open,\n    value\n  };\n}\n\nexport default useSelect;","map":{"version":3,"names":["_extends","React","unstable_useControlled","useControlled","unstable_useForkRef","useForkRef","useButton","useListbox","defaultListboxReducer","ActionTypes","defaultOptionStringifier","useSelect","props","buttonRef","buttonRefProp","defaultValue","disabled","listboxId","listboxRef","listboxRefProp","multiple","onChange","onOpenChange","open","options","optionStringifier","value","valueProp","useRef","handleButtonRef","setValue","controlled","default","name","state","ignoreEnterKeyUp","ignoreClick","listboxFocusRequested","requestListboxFocus","useState","focusListboxIfRequested","useCallback","current","focus","updateListboxRef","listboxElement","handleListboxRef","useEffect","createHandleMouseDown","otherHandlers","event","_otherHandlers$onMous","onMouseDown","call","defaultPrevented","createHandleButtonClick","_otherHandlers$onClic","onClick","createHandleButtonKeyDown","_otherHandlers$onKeyD","onKeyDown","key","preventDefault","createHandleListboxKeyUp","_otherHandlers$onKeyU","onKeyUp","closingKeys","includes","_buttonRef$current","createHandleListboxItemClick","_otherHandlers$onClic2","createHandleListboxBlur","_otherHandlers$onBlur","onBlur","listboxReducer","action","newState","type","keyDown","selectedValue","highlightedValue","blur","optionsChange","getRootProps","getButtonRootProps","active","buttonActive","focusVisible","buttonFocusVisible","ref","selectedOption","useMemo","_props$options$find","filter","o","find","useListboxParameters","onChangeMultiple","id","isOptionDisabled","_o$disabled","optionComparer","v","e","newOptions","newValues","map","onChangeSingle","_o$disabled2","option","_option$value","_option$value2","stateReducer","getListboxRootProps","getOptionProps","getListboxOptionProps","getOptionState","highlightedOption","listboxSelectedOption","getButtonProps","getListboxProps","useDebugValue"],"sources":["/Users/jalenjohnson/Desktop/React Portfolio/fitness-tracker/node_modules/@mui/base/SelectUnstyled/useSelect.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useControlled as useControlled, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useButton } from '../ButtonUnstyled';\nimport { useListbox, defaultListboxReducer, ActionTypes } from '../ListboxUnstyled';\nimport defaultOptionStringifier from './defaultOptionStringifier';\n\nfunction useSelect(props) {\n  const {\n    buttonRef: buttonRefProp,\n    defaultValue,\n    disabled = false,\n    listboxId,\n    listboxRef: listboxRefProp,\n    multiple = false,\n    onChange,\n    onOpenChange,\n    open = false,\n    options,\n    optionStringifier = defaultOptionStringifier,\n    value: valueProp\n  } = props;\n  const buttonRef = React.useRef(null);\n  const handleButtonRef = useForkRef(buttonRefProp, buttonRef);\n  const listboxRef = React.useRef(null);\n  const [value, setValue] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'SelectUnstyled',\n    state: 'value'\n  }); // prevents closing the listbox on keyUp right after opening it\n\n  const ignoreEnterKeyUp = React.useRef(false); // prevents reopening the listbox when button is clicked\n  // (listbox closes on lost focus, then immediately reopens on click)\n\n  const ignoreClick = React.useRef(false); // Ensure the listbox is focused after opening\n\n  const [listboxFocusRequested, requestListboxFocus] = React.useState(false);\n  const focusListboxIfRequested = React.useCallback(() => {\n    if (listboxFocusRequested && listboxRef.current != null) {\n      listboxRef.current.focus();\n      requestListboxFocus(false);\n    }\n  }, [listboxFocusRequested]);\n\n  const updateListboxRef = listboxElement => {\n    listboxRef.current = listboxElement;\n    focusListboxIfRequested();\n  };\n\n  const handleListboxRef = useForkRef(useForkRef(listboxRefProp, listboxRef), updateListboxRef);\n  React.useEffect(() => {\n    focusListboxIfRequested();\n  }, [focusListboxIfRequested]);\n  React.useEffect(() => {\n    requestListboxFocus(open);\n  }, [open]);\n\n  const createHandleMouseDown = otherHandlers => event => {\n    var _otherHandlers$onMous;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onMous = otherHandlers.onMouseDown) == null ? void 0 : _otherHandlers$onMous.call(otherHandlers, event);\n\n    if (!event.defaultPrevented && open) {\n      ignoreClick.current = true;\n    }\n  };\n\n  const createHandleButtonClick = otherHandlers => event => {\n    var _otherHandlers$onClic;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);\n\n    if (!event.defaultPrevented && !ignoreClick.current) {\n      onOpenChange == null ? void 0 : onOpenChange(!open);\n    }\n\n    ignoreClick.current = false;\n  };\n\n  const createHandleButtonKeyDown = otherHandlers => event => {\n    var _otherHandlers$onKeyD;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (event.key === 'Enter') {\n      ignoreEnterKeyUp.current = true;\n    }\n\n    if (event.key === 'ArrowDown' || event.key === 'ArrowUp') {\n      event.preventDefault();\n      onOpenChange == null ? void 0 : onOpenChange(true);\n    }\n  };\n\n  const createHandleListboxKeyUp = otherHandlers => event => {\n    var _otherHandlers$onKeyU;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onKeyU = otherHandlers.onKeyUp) == null ? void 0 : _otherHandlers$onKeyU.call(otherHandlers, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    const closingKeys = multiple ? ['Escape'] : ['Escape', 'Enter', ' '];\n\n    if (open && !ignoreEnterKeyUp.current && closingKeys.includes(event.key)) {\n      var _buttonRef$current;\n\n      buttonRef == null ? void 0 : (_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.focus();\n    }\n\n    ignoreEnterKeyUp.current = false;\n  };\n\n  const createHandleListboxItemClick = otherHandlers => event => {\n    var _otherHandlers$onClic2;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onClic2 = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic2.call(otherHandlers, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (!multiple) {\n      onOpenChange == null ? void 0 : onOpenChange(false);\n    }\n  };\n\n  const createHandleListboxBlur = otherHandlers => event => {\n    var _otherHandlers$onBlur;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, event);\n\n    if (!event.defaultPrevented) {\n      onOpenChange == null ? void 0 : onOpenChange(false);\n    }\n  };\n\n  const listboxReducer = (state, action) => {\n    const newState = defaultListboxReducer(state, action); // change selection when listbox is closed\n\n    if (action.type === ActionTypes.keyDown && !open && (action.event.key === 'ArrowUp' || action.event.key === 'ArrowDown')) {\n      return _extends({}, newState, {\n        selectedValue: newState.highlightedValue\n      });\n    }\n\n    if (action.type === ActionTypes.blur || action.type === ActionTypes.setValue || action.type === ActionTypes.optionsChange) {\n      return _extends({}, newState, {\n        highlightedValue: newState.selectedValue\n      });\n    }\n\n    return newState;\n  };\n\n  const {\n    getRootProps: getButtonRootProps,\n    active: buttonActive,\n    focusVisible: buttonFocusVisible\n  } = useButton({\n    disabled,\n    ref: handleButtonRef\n  });\n  const selectedOption = React.useMemo(() => {\n    var _props$options$find;\n\n    return props.multiple ? props.options.filter(o => value.includes(o.value)) : (_props$options$find = props.options.find(o => o.value === value)) != null ? _props$options$find : null;\n  }, [props.multiple, props.options, value]);\n  let useListboxParameters;\n\n  if (props.multiple) {\n    const onChangeMultiple = onChange;\n    useListboxParameters = {\n      id: listboxId,\n      isOptionDisabled: o => {\n        var _o$disabled;\n\n        return (_o$disabled = o == null ? void 0 : o.disabled) != null ? _o$disabled : false;\n      },\n      optionComparer: (o, v) => (o == null ? void 0 : o.value) === (v == null ? void 0 : v.value),\n      listboxRef: handleListboxRef,\n      multiple: true,\n      onChange: (e, newOptions) => {\n        const newValues = newOptions.map(o => o.value);\n        setValue(newValues);\n        onChangeMultiple == null ? void 0 : onChangeMultiple(e, newValues);\n      },\n      options,\n      optionStringifier,\n      value: selectedOption\n    };\n  } else {\n    const onChangeSingle = onChange;\n    useListboxParameters = {\n      id: listboxId,\n      isOptionDisabled: o => {\n        var _o$disabled2;\n\n        return (_o$disabled2 = o == null ? void 0 : o.disabled) != null ? _o$disabled2 : false;\n      },\n      optionComparer: (o, v) => (o == null ? void 0 : o.value) === (v == null ? void 0 : v.value),\n      listboxRef: handleListboxRef,\n      multiple: false,\n      onChange: (e, option) => {\n        var _option$value, _option$value2;\n\n        setValue((_option$value = option == null ? void 0 : option.value) != null ? _option$value : null);\n        onChangeSingle == null ? void 0 : onChangeSingle(e, (_option$value2 = option == null ? void 0 : option.value) != null ? _option$value2 : null);\n      },\n      options,\n      optionStringifier,\n      stateReducer: listboxReducer,\n      value: selectedOption\n    };\n  }\n\n  const {\n    getRootProps: getListboxRootProps,\n    getOptionProps: getListboxOptionProps,\n    getOptionState,\n    highlightedOption,\n    selectedOption: listboxSelectedOption\n  } = useListbox(useListboxParameters);\n\n  const getButtonProps = (otherHandlers = {}) => {\n    return _extends({}, getButtonRootProps(_extends({}, otherHandlers, {\n      onClick: createHandleButtonClick(otherHandlers),\n      onMouseDown: createHandleMouseDown(otherHandlers),\n      onKeyDown: createHandleButtonKeyDown(otherHandlers)\n    })), {\n      'aria-expanded': open,\n      'aria-haspopup': 'listbox'\n    });\n  };\n\n  const getListboxProps = (otherHandlers = {}) => getListboxRootProps(_extends({}, otherHandlers, {\n    onBlur: createHandleListboxBlur(otherHandlers),\n    onKeyUp: createHandleListboxKeyUp(otherHandlers)\n  }));\n\n  const getOptionProps = (option, otherHandlers = {}) => {\n    return getListboxOptionProps(option, _extends({}, otherHandlers, {\n      onClick: createHandleListboxItemClick(otherHandlers)\n    }));\n  };\n\n  React.useDebugValue({\n    selectedOption: listboxSelectedOption,\n    highlightedOption,\n    open\n  });\n  return {\n    buttonActive,\n    buttonFocusVisible,\n    disabled,\n    getButtonProps,\n    getListboxProps,\n    getOptionProps,\n    getOptionState,\n    open,\n    value\n  };\n}\n\nexport default useSelect;"],"mappings":"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"},"metadata":{},"sourceType":"module"}