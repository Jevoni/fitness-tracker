{"ast":null,"code":"import _slicedToArray from \"/Users/jalenjohnson/Desktop/ReactPortfolio/fitness-tracker/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"initialWidth\", \"width\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDisplayName } from '@mui/utils';\nimport { getThemeProps } from '@mui/system';\nimport useTheme from '../styles/useTheme';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useMediaQuery from '../useMediaQuery';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar breakpointKeys = ['xs', 'sm', 'md', 'lg', 'xl']; // By default, returns true if screen width is the same or greater than the given breakpoint.\n\nexport var isWidthUp = function isWidthUp(breakpoint, width) {\n  var inclusive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n  if (inclusive) {\n    return breakpointKeys.indexOf(breakpoint) <= breakpointKeys.indexOf(width);\n  }\n\n  return breakpointKeys.indexOf(breakpoint) < breakpointKeys.indexOf(width);\n}; // By default, returns true if screen width is the same or less than the given breakpoint.\n\nexport var isWidthDown = function isWidthDown(breakpoint, width) {\n  var inclusive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  if (inclusive) {\n    return breakpointKeys.indexOf(width) <= breakpointKeys.indexOf(breakpoint);\n  }\n\n  return breakpointKeys.indexOf(width) < breakpointKeys.indexOf(breakpoint);\n};\n\nvar withWidth = function withWidth() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (Component) {\n    var _options$withTheme = options.withTheme,\n        withThemeOption = _options$withTheme === void 0 ? false : _options$withTheme,\n        _options$noSSR = options.noSSR,\n        noSSR = _options$noSSR === void 0 ? false : _options$noSSR,\n        initialWidthOption = options.initialWidth;\n\n    function WithWidth(props) {\n      var contextTheme = useTheme();\n      var theme = props.theme || contextTheme;\n\n      var _getThemeProps = getThemeProps({\n        theme: theme,\n        name: 'MuiWithWidth',\n        props: props\n      }),\n          initialWidth = _getThemeProps.initialWidth,\n          width = _getThemeProps.width,\n          other = _objectWithoutPropertiesLoose(_getThemeProps, _excluded);\n\n      var _React$useState = React.useState(false),\n          _React$useState2 = _slicedToArray(_React$useState, 2),\n          mountedState = _React$useState2[0],\n          setMountedState = _React$useState2[1];\n\n      useEnhancedEffect(function () {\n        setMountedState(true);\n      }, []);\n      /**\n       * innerWidth |xs      sm      md      lg      xl\n       *            |-------|-------|-------|-------|------>\n       * width      |  xs   |  sm   |  md   |  lg   |  xl\n       */\n\n      var keys = theme.breakpoints.keys.slice().reverse();\n      var widthComputed = keys.reduce(function (output, key) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        var matches = useMediaQuery(theme.breakpoints.up(key));\n        return !output && matches ? key : output;\n      }, null);\n\n      var more = _extends({\n        width: width || (mountedState || noSSR ? widthComputed : undefined) || initialWidth || initialWidthOption\n      }, withThemeOption ? {\n        theme: theme\n      } : {}, other); // When rendering the component on the server,\n      // we have no idea about the client browser screen width.\n      // In order to prevent blinks and help the reconciliation of the React tree\n      // we are not rendering the child component.\n      //\n      // An alternative is to use the `initialWidth` property.\n\n\n      if (more.width === undefined) {\n        return null;\n      }\n\n      return /*#__PURE__*/_jsx(Component, _extends({}, more));\n    }\n\n    process.env.NODE_ENV !== \"production\" ? WithWidth.propTypes = {\n      /**\n       * As `window.innerWidth` is unavailable on the server,\n       * we default to rendering an empty component during the first mount.\n       * You might want to use a heuristic to approximate\n       * the screen width of the client browser screen width.\n       *\n       * For instance, you could be using the user-agent or the client-hints.\n       * https://caniuse.com/#search=client%20hint\n       */\n      initialWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n\n      /**\n       * @ignore\n       */\n      theme: PropTypes.object,\n\n      /**\n       * Bypass the width calculation logic.\n       */\n      width: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl'])\n    } : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      WithWidth.displayName = \"WithWidth(\".concat(getDisplayName(Component), \")\");\n    }\n\n    return WithWidth;\n  };\n};\n\nexport default withWidth;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","getDisplayName","getThemeProps","useTheme","useEnhancedEffect","useMediaQuery","jsx","_jsx","breakpointKeys","isWidthUp","breakpoint","width","inclusive","indexOf","isWidthDown","withWidth","options","Component","withTheme","withThemeOption","noSSR","initialWidthOption","initialWidth","WithWidth","props","contextTheme","theme","_getThemeProps","name","other","useState","mountedState","setMountedState","keys","breakpoints","slice","reverse","widthComputed","reduce","output","key","matches","up","more","undefined","process","env","NODE_ENV","propTypes","oneOf","object","displayName"],"sources":["/Users/jalenjohnson/Desktop/ReactPortfolio/fitness-tracker/node_modules/@mui/material/esm/Hidden/withWidth.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"initialWidth\", \"width\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDisplayName } from '@mui/utils';\nimport { getThemeProps } from '@mui/system';\nimport useTheme from '../styles/useTheme';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useMediaQuery from '../useMediaQuery';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst breakpointKeys = ['xs', 'sm', 'md', 'lg', 'xl']; // By default, returns true if screen width is the same or greater than the given breakpoint.\n\nexport const isWidthUp = (breakpoint, width, inclusive = true) => {\n  if (inclusive) {\n    return breakpointKeys.indexOf(breakpoint) <= breakpointKeys.indexOf(width);\n  }\n\n  return breakpointKeys.indexOf(breakpoint) < breakpointKeys.indexOf(width);\n}; // By default, returns true if screen width is the same or less than the given breakpoint.\n\nexport const isWidthDown = (breakpoint, width, inclusive = false) => {\n  if (inclusive) {\n    return breakpointKeys.indexOf(width) <= breakpointKeys.indexOf(breakpoint);\n  }\n\n  return breakpointKeys.indexOf(width) < breakpointKeys.indexOf(breakpoint);\n};\n\nconst withWidth = (options = {}) => Component => {\n  const {\n    withTheme: withThemeOption = false,\n    noSSR = false,\n    initialWidth: initialWidthOption\n  } = options;\n\n  function WithWidth(props) {\n    const contextTheme = useTheme();\n    const theme = props.theme || contextTheme;\n\n    const _getThemeProps = getThemeProps({\n      theme,\n      name: 'MuiWithWidth',\n      props\n    }),\n          {\n      initialWidth,\n      width\n    } = _getThemeProps,\n          other = _objectWithoutPropertiesLoose(_getThemeProps, _excluded);\n\n    const [mountedState, setMountedState] = React.useState(false);\n    useEnhancedEffect(() => {\n      setMountedState(true);\n    }, []);\n    /**\n     * innerWidth |xs      sm      md      lg      xl\n     *            |-------|-------|-------|-------|------>\n     * width      |  xs   |  sm   |  md   |  lg   |  xl\n     */\n\n    const keys = theme.breakpoints.keys.slice().reverse();\n    const widthComputed = keys.reduce((output, key) => {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      const matches = useMediaQuery(theme.breakpoints.up(key));\n      return !output && matches ? key : output;\n    }, null);\n\n    const more = _extends({\n      width: width || (mountedState || noSSR ? widthComputed : undefined) || initialWidth || initialWidthOption\n    }, withThemeOption ? {\n      theme\n    } : {}, other); // When rendering the component on the server,\n    // we have no idea about the client browser screen width.\n    // In order to prevent blinks and help the reconciliation of the React tree\n    // we are not rendering the child component.\n    //\n    // An alternative is to use the `initialWidth` property.\n\n\n    if (more.width === undefined) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsx(Component, _extends({}, more));\n  }\n\n  process.env.NODE_ENV !== \"production\" ? WithWidth.propTypes = {\n    /**\n     * As `window.innerWidth` is unavailable on the server,\n     * we default to rendering an empty component during the first mount.\n     * You might want to use a heuristic to approximate\n     * the screen width of the client browser screen width.\n     *\n     * For instance, you could be using the user-agent or the client-hints.\n     * https://caniuse.com/#search=client%20hint\n     */\n    initialWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n\n    /**\n     * @ignore\n     */\n    theme: PropTypes.object,\n\n    /**\n     * Bypass the width calculation logic.\n     */\n    width: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl'])\n  } : void 0;\n\n  if (process.env.NODE_ENV !== 'production') {\n    WithWidth.displayName = `WithWidth(${getDisplayName(Component)})`;\n  }\n\n  return WithWidth;\n};\n\nexport default withWidth;"],"mappings":"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"},"metadata":{},"sourceType":"module"}