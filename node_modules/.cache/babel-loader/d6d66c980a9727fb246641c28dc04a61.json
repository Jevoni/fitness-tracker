{"ast":null,"code":"import _slicedToArray from \"/Users/jalenjohnson/Desktop/ReactPortfolio/fitness-tracker/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"autoFocus\", \"children\", \"component\", \"components\", \"componentsProps\", \"defaultValue\", \"defaultListboxOpen\", \"disabled\", \"getSerializedValue\", \"listboxId\", \"listboxOpen\", \"name\", \"onChange\", \"onListboxOpenChange\", \"optionStringifier\", \"renderValue\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useForkRef as useForkRef, unstable_useControlled as useControlled } from '@mui/utils';\nimport { flattenOptionGroups, getOptionsFromChildren } from './utils';\nimport useSelect from './useSelect';\nimport { useSlotProps } from '../utils';\nimport PopperUnstyled from '../PopperUnstyled';\nimport { SelectUnstyledContext } from './SelectUnstyledContext';\nimport composeClasses from '../composeClasses';\nimport { getSelectUnstyledUtilityClass } from './selectUnstyledClasses';\nimport defaultOptionStringifier from './defaultOptionStringifier';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction defaultRenderSingleValue(selectedOption) {\n  var _selectedOption$label;\n\n  return (_selectedOption$label = selectedOption == null ? void 0 : selectedOption.label) != null ? _selectedOption$label : '';\n}\n\nfunction defaultFormValueProvider(selectedOption) {\n  if ((selectedOption == null ? void 0 : selectedOption.value) == null) {\n    return '';\n  }\n\n  if (typeof selectedOption.value === 'string' || typeof selectedOption.value === 'number') {\n    return selectedOption.value;\n  }\n\n  return JSON.stringify(selectedOption.value);\n}\n\nfunction useUtilityClasses(ownerState) {\n  var active = ownerState.active,\n      disabled = ownerState.disabled,\n      open = ownerState.open,\n      focusVisible = ownerState.focusVisible;\n  var slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible', active && 'active', open && 'expanded'],\n    listbox: ['listbox', disabled && 'disabled'],\n    popper: ['popper']\n  };\n  return composeClasses(slots, getSelectUnstyledUtilityClass, {});\n}\n/**\n * The foundation for building custom-styled select components.\n *\n * Demos:\n *\n * - [Unstyled Select](https://mui.com/base/react-select/)\n *\n * API:\n *\n * - [SelectUnstyled API](https://mui.com/base/api/select-unstyled/)\n */\n\n\nvar SelectUnstyled = /*#__PURE__*/React.forwardRef(function SelectUnstyled(props, forwardedRef) {\n  var _ref, _components$Listbox, _components$Popper;\n\n  var autoFocus = props.autoFocus,\n      children = props.children,\n      component = props.component,\n      _props$components = props.components,\n      components = _props$components === void 0 ? {} : _props$components,\n      _props$componentsProp = props.componentsProps,\n      componentsProps = _props$componentsProp === void 0 ? {} : _props$componentsProp,\n      defaultValue = props.defaultValue,\n      _props$defaultListbox = props.defaultListboxOpen,\n      defaultListboxOpen = _props$defaultListbox === void 0 ? false : _props$defaultListbox,\n      disabledProp = props.disabled,\n      _props$getSerializedV = props.getSerializedValue,\n      getSerializedValue = _props$getSerializedV === void 0 ? defaultFormValueProvider : _props$getSerializedV,\n      listboxId = props.listboxId,\n      listboxOpenProp = props.listboxOpen,\n      name = props.name,\n      onChange = props.onChange,\n      onListboxOpenChange = props.onListboxOpenChange,\n      _props$optionStringif = props.optionStringifier,\n      optionStringifier = _props$optionStringif === void 0 ? defaultOptionStringifier : _props$optionStringif,\n      renderValueProp = props.renderValue,\n      valueProp = props.value,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var renderValue = renderValueProp != null ? renderValueProp : defaultRenderSingleValue;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      groupedOptions = _React$useState2[0],\n      setGroupedOptions = _React$useState2[1];\n\n  var options = React.useMemo(function () {\n    return flattenOptionGroups(groupedOptions);\n  }, [groupedOptions]);\n\n  var _useControlled = useControlled({\n    controlled: listboxOpenProp,\n    default: defaultListboxOpen,\n    name: 'SelectUnstyled',\n    state: 'listboxOpen'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      listboxOpen = _useControlled2[0],\n      setListboxOpen = _useControlled2[1];\n\n  React.useEffect(function () {\n    setGroupedOptions(getOptionsFromChildren(children));\n  }, [children]);\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      buttonDefined = _React$useState4[0],\n      setButtonDefined = _React$useState4[1];\n\n  var buttonRef = React.useRef(null);\n  var listboxRef = React.useRef(null);\n  var Button = (_ref = component != null ? component : components.Root) != null ? _ref : 'button';\n  var ListboxRoot = (_components$Listbox = components.Listbox) != null ? _components$Listbox : 'ul';\n  var Popper = (_components$Popper = components.Popper) != null ? _components$Popper : PopperUnstyled;\n  var handleButtonRefChange = React.useCallback(function (element) {\n    setButtonDefined(element != null);\n  }, []);\n  var handleButtonRef = useForkRef(forwardedRef, useForkRef(buttonRef, handleButtonRefChange));\n  React.useEffect(function () {\n    if (autoFocus) {\n      buttonRef.current.focus();\n    }\n  }, [autoFocus]);\n\n  var handleOpenChange = function handleOpenChange(isOpen) {\n    setListboxOpen(isOpen);\n    onListboxOpenChange == null ? void 0 : onListboxOpenChange(isOpen);\n  };\n\n  var _useSelect = useSelect({\n    buttonRef: handleButtonRef,\n    defaultValue: defaultValue,\n    disabled: disabledProp,\n    listboxId: listboxId,\n    multiple: false,\n    onChange: onChange,\n    onOpenChange: handleOpenChange,\n    open: listboxOpen,\n    options: options,\n    optionStringifier: optionStringifier,\n    value: valueProp\n  }),\n      buttonActive = _useSelect.buttonActive,\n      buttonFocusVisible = _useSelect.buttonFocusVisible,\n      disabled = _useSelect.disabled,\n      getButtonProps = _useSelect.getButtonProps,\n      getListboxProps = _useSelect.getListboxProps,\n      getOptionProps = _useSelect.getOptionProps,\n      getOptionState = _useSelect.getOptionState,\n      value = _useSelect.value;\n\n  var ownerState = _extends({}, props, {\n    active: buttonActive,\n    defaultListboxOpen: defaultListboxOpen,\n    disabled: disabled,\n    focusVisible: buttonFocusVisible,\n    open: listboxOpen,\n    renderValue: renderValue,\n    value: value\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  var selectedOption = React.useMemo(function () {\n    var _options$find;\n\n    return (_options$find = options.find(function (o) {\n      return value === o.value;\n    })) != null ? _options$find : null;\n  }, [options, value]);\n  var buttonProps = useSlotProps({\n    elementType: Button,\n    getSlotProps: getButtonProps,\n    externalSlotProps: componentsProps.root,\n    externalForwardedProps: other,\n    ownerState: ownerState,\n    className: classes.root\n  });\n  var listboxProps = useSlotProps({\n    elementType: ListboxRoot,\n    getSlotProps: getListboxProps,\n    externalSlotProps: componentsProps.listbox,\n    additionalProps: {\n      ref: listboxRef\n    },\n    ownerState: ownerState,\n    className: classes.listbox\n  });\n  var popperProps = useSlotProps({\n    elementType: Popper,\n    externalSlotProps: componentsProps.popper,\n    additionalProps: {\n      anchorEl: buttonRef.current,\n      disablePortal: true,\n      open: listboxOpen,\n      placement: 'bottom-start',\n      role: undefined\n    },\n    ownerState: ownerState,\n    className: classes.popper\n  });\n  var context = {\n    getOptionProps: getOptionProps,\n    getOptionState: getOptionState,\n    listboxRef: listboxRef\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(Button, _extends({}, buttonProps, {\n      children: renderValue(selectedOption)\n    })), buttonDefined && /*#__PURE__*/_jsx(Popper, _extends({}, popperProps, {\n      children: /*#__PURE__*/_jsx(ListboxRoot, _extends({}, listboxProps, {\n        children: /*#__PURE__*/_jsx(SelectUnstyledContext.Provider, {\n          value: context,\n          children: children\n        })\n      }))\n    })), name && /*#__PURE__*/_jsx(\"input\", {\n      type: \"hidden\",\n      name: name,\n      value: getSerializedValue(selectedOption)\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SelectUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the select element is focused during the first mount\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Select.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .shape({\n    Listbox: PropTypes.elementType,\n    Popper: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Input.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    listbox: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    popper: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * If `true`, the select will be initially open.\n   * @default false\n   */\n  defaultListboxOpen: PropTypes.bool,\n\n  /**\n   * The default selected value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the select is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * A function to convert the currently selected value to a string.\n   * Used to set a value of a hidden input associated with the select,\n   * so that the selected value can be posted with a form.\n   */\n  getSerializedValue: PropTypes.func,\n\n  /**\n   * `id` attribute of the listbox element.\n   * Also used to derive the `id` attributes of options.\n   */\n  listboxId: PropTypes.string,\n\n  /**\n   * Controls the open state of the select's listbox.\n   * @default undefined\n   */\n  listboxOpen: PropTypes.bool,\n\n  /**\n   * Name of the element. For example used by the server to identify the fields in form submits.\n   * If the name is provided, the component will render a hidden input element that can be submitted to a server.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when an option is selected.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   * Use in controlled mode (see listboxOpen).\n   */\n  onListboxOpenChange: PropTypes.func,\n\n  /**\n   * A function used to convert the option label to a string.\n   * It's useful when labels are elements and need to be converted to plain text\n   * to enable navigation using character keys on a keyboard.\n   *\n   * @default defaultOptionStringifier\n   */\n  optionStringifier: PropTypes.func,\n\n  /**\n   * Function that customizes the rendering of the selected value.\n   */\n  renderValue: PropTypes.func,\n\n  /**\n   * The selected value.\n   * Set to `null` to deselect all options.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SelectUnstyled;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","unstable_useForkRef","useForkRef","unstable_useControlled","useControlled","flattenOptionGroups","getOptionsFromChildren","useSelect","useSlotProps","PopperUnstyled","SelectUnstyledContext","composeClasses","getSelectUnstyledUtilityClass","defaultOptionStringifier","jsx","_jsx","jsxs","_jsxs","defaultRenderSingleValue","selectedOption","_selectedOption$label","label","defaultFormValueProvider","value","JSON","stringify","useUtilityClasses","ownerState","active","disabled","open","focusVisible","slots","root","listbox","popper","SelectUnstyled","forwardRef","props","forwardedRef","_ref","_components$Listbox","_components$Popper","autoFocus","children","component","components","componentsProps","defaultValue","defaultListboxOpen","disabledProp","getSerializedValue","listboxId","listboxOpenProp","listboxOpen","name","onChange","onListboxOpenChange","optionStringifier","renderValueProp","renderValue","valueProp","other","useState","groupedOptions","setGroupedOptions","options","useMemo","controlled","default","state","setListboxOpen","useEffect","buttonDefined","setButtonDefined","buttonRef","useRef","listboxRef","Button","Root","ListboxRoot","Listbox","Popper","handleButtonRefChange","useCallback","element","handleButtonRef","current","focus","handleOpenChange","isOpen","multiple","onOpenChange","buttonActive","buttonFocusVisible","getButtonProps","getListboxProps","getOptionProps","getOptionState","classes","_options$find","find","o","buttonProps","elementType","getSlotProps","externalSlotProps","externalForwardedProps","className","listboxProps","additionalProps","ref","popperProps","anchorEl","disablePortal","placement","role","undefined","context","Fragment","Provider","type","process","env","NODE_ENV","propTypes","bool","node","shape","oneOfType","func","object","any","string"],"sources":["/Users/jalenjohnson/Desktop/ReactPortfolio/fitness-tracker/node_modules/@mui/base/SelectUnstyled/SelectUnstyled.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"autoFocus\", \"children\", \"component\", \"components\", \"componentsProps\", \"defaultValue\", \"defaultListboxOpen\", \"disabled\", \"getSerializedValue\", \"listboxId\", \"listboxOpen\", \"name\", \"onChange\", \"onListboxOpenChange\", \"optionStringifier\", \"renderValue\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useForkRef as useForkRef, unstable_useControlled as useControlled } from '@mui/utils';\nimport { flattenOptionGroups, getOptionsFromChildren } from './utils';\nimport useSelect from './useSelect';\nimport { useSlotProps } from '../utils';\nimport PopperUnstyled from '../PopperUnstyled';\nimport { SelectUnstyledContext } from './SelectUnstyledContext';\nimport composeClasses from '../composeClasses';\nimport { getSelectUnstyledUtilityClass } from './selectUnstyledClasses';\nimport defaultOptionStringifier from './defaultOptionStringifier';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction defaultRenderSingleValue(selectedOption) {\n  var _selectedOption$label;\n\n  return (_selectedOption$label = selectedOption == null ? void 0 : selectedOption.label) != null ? _selectedOption$label : '';\n}\n\nfunction defaultFormValueProvider(selectedOption) {\n  if ((selectedOption == null ? void 0 : selectedOption.value) == null) {\n    return '';\n  }\n\n  if (typeof selectedOption.value === 'string' || typeof selectedOption.value === 'number') {\n    return selectedOption.value;\n  }\n\n  return JSON.stringify(selectedOption.value);\n}\n\nfunction useUtilityClasses(ownerState) {\n  const {\n    active,\n    disabled,\n    open,\n    focusVisible\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible', active && 'active', open && 'expanded'],\n    listbox: ['listbox', disabled && 'disabled'],\n    popper: ['popper']\n  };\n  return composeClasses(slots, getSelectUnstyledUtilityClass, {});\n}\n/**\n * The foundation for building custom-styled select components.\n *\n * Demos:\n *\n * - [Unstyled Select](https://mui.com/base/react-select/)\n *\n * API:\n *\n * - [SelectUnstyled API](https://mui.com/base/api/select-unstyled/)\n */\n\n\nconst SelectUnstyled = /*#__PURE__*/React.forwardRef(function SelectUnstyled(props, forwardedRef) {\n  var _ref, _components$Listbox, _components$Popper;\n\n  const {\n    autoFocus,\n    children,\n    component,\n    components = {},\n    componentsProps = {},\n    defaultValue,\n    defaultListboxOpen = false,\n    disabled: disabledProp,\n    getSerializedValue = defaultFormValueProvider,\n    listboxId,\n    listboxOpen: listboxOpenProp,\n    name,\n    onChange,\n    onListboxOpenChange,\n    optionStringifier = defaultOptionStringifier,\n    renderValue: renderValueProp,\n    value: valueProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const renderValue = renderValueProp != null ? renderValueProp : defaultRenderSingleValue;\n  const [groupedOptions, setGroupedOptions] = React.useState([]);\n  const options = React.useMemo(() => flattenOptionGroups(groupedOptions), [groupedOptions]);\n  const [listboxOpen, setListboxOpen] = useControlled({\n    controlled: listboxOpenProp,\n    default: defaultListboxOpen,\n    name: 'SelectUnstyled',\n    state: 'listboxOpen'\n  });\n  React.useEffect(() => {\n    setGroupedOptions(getOptionsFromChildren(children));\n  }, [children]);\n  const [buttonDefined, setButtonDefined] = React.useState(false);\n  const buttonRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const Button = (_ref = component != null ? component : components.Root) != null ? _ref : 'button';\n  const ListboxRoot = (_components$Listbox = components.Listbox) != null ? _components$Listbox : 'ul';\n  const Popper = (_components$Popper = components.Popper) != null ? _components$Popper : PopperUnstyled;\n  const handleButtonRefChange = React.useCallback(element => {\n    setButtonDefined(element != null);\n  }, []);\n  const handleButtonRef = useForkRef(forwardedRef, useForkRef(buttonRef, handleButtonRefChange));\n  React.useEffect(() => {\n    if (autoFocus) {\n      buttonRef.current.focus();\n    }\n  }, [autoFocus]);\n\n  const handleOpenChange = isOpen => {\n    setListboxOpen(isOpen);\n    onListboxOpenChange == null ? void 0 : onListboxOpenChange(isOpen);\n  };\n\n  const {\n    buttonActive,\n    buttonFocusVisible,\n    disabled,\n    getButtonProps,\n    getListboxProps,\n    getOptionProps,\n    getOptionState,\n    value\n  } = useSelect({\n    buttonRef: handleButtonRef,\n    defaultValue,\n    disabled: disabledProp,\n    listboxId,\n    multiple: false,\n    onChange,\n    onOpenChange: handleOpenChange,\n    open: listboxOpen,\n    options,\n    optionStringifier,\n    value: valueProp\n  });\n\n  const ownerState = _extends({}, props, {\n    active: buttonActive,\n    defaultListboxOpen,\n    disabled,\n    focusVisible: buttonFocusVisible,\n    open: listboxOpen,\n    renderValue,\n    value\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const selectedOption = React.useMemo(() => {\n    var _options$find;\n\n    return (_options$find = options.find(o => value === o.value)) != null ? _options$find : null;\n  }, [options, value]);\n  const buttonProps = useSlotProps({\n    elementType: Button,\n    getSlotProps: getButtonProps,\n    externalSlotProps: componentsProps.root,\n    externalForwardedProps: other,\n    ownerState,\n    className: classes.root\n  });\n  const listboxProps = useSlotProps({\n    elementType: ListboxRoot,\n    getSlotProps: getListboxProps,\n    externalSlotProps: componentsProps.listbox,\n    additionalProps: {\n      ref: listboxRef\n    },\n    ownerState,\n    className: classes.listbox\n  });\n  const popperProps = useSlotProps({\n    elementType: Popper,\n    externalSlotProps: componentsProps.popper,\n    additionalProps: {\n      anchorEl: buttonRef.current,\n      disablePortal: true,\n      open: listboxOpen,\n      placement: 'bottom-start',\n      role: undefined\n    },\n    ownerState,\n    className: classes.popper\n  });\n  const context = {\n    getOptionProps,\n    getOptionState,\n    listboxRef\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(Button, _extends({}, buttonProps, {\n      children: renderValue(selectedOption)\n    })), buttonDefined && /*#__PURE__*/_jsx(Popper, _extends({}, popperProps, {\n      children: /*#__PURE__*/_jsx(ListboxRoot, _extends({}, listboxProps, {\n        children: /*#__PURE__*/_jsx(SelectUnstyledContext.Provider, {\n          value: context,\n          children: children\n        })\n      }))\n    })), name && /*#__PURE__*/_jsx(\"input\", {\n      type: \"hidden\",\n      name: name,\n      value: getSerializedValue(selectedOption)\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SelectUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the select element is focused during the first mount\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Select.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .shape({\n    Listbox: PropTypes.elementType,\n    Popper: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Input.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    listbox: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    popper: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * If `true`, the select will be initially open.\n   * @default false\n   */\n  defaultListboxOpen: PropTypes.bool,\n\n  /**\n   * The default selected value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the select is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * A function to convert the currently selected value to a string.\n   * Used to set a value of a hidden input associated with the select,\n   * so that the selected value can be posted with a form.\n   */\n  getSerializedValue: PropTypes.func,\n\n  /**\n   * `id` attribute of the listbox element.\n   * Also used to derive the `id` attributes of options.\n   */\n  listboxId: PropTypes.string,\n\n  /**\n   * Controls the open state of the select's listbox.\n   * @default undefined\n   */\n  listboxOpen: PropTypes.bool,\n\n  /**\n   * Name of the element. For example used by the server to identify the fields in form submits.\n   * If the name is provided, the component will render a hidden input element that can be submitted to a server.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when an option is selected.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   * Use in controlled mode (see listboxOpen).\n   */\n  onListboxOpenChange: PropTypes.func,\n\n  /**\n   * A function used to convert the option label to a string.\n   * It's useful when labels are elements and need to be converted to plain text\n   * to enable navigation using character keys on a keyboard.\n   *\n   * @default defaultOptionStringifier\n   */\n  optionStringifier: PropTypes.func,\n\n  /**\n   * Function that customizes the rendering of the selected value.\n   */\n  renderValue: PropTypes.func,\n\n  /**\n   * The selected value.\n   * Set to `null` to deselect all options.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SelectUnstyled;"],"mappings":"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"},"metadata":{},"sourceType":"module"}