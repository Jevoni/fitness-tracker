{"ast":null,"code":"import _slicedToArray from \"/Users/jalenjohnson/Desktop/ReactPortfolio/fitness-tracker/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport { getThemeProps, useThemeWithoutDefault as useTheme } from '@mui/system';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\n/**\n * @deprecated Not used internally. Use `MediaQueryListEvent` from lib.dom.d.ts instead.\n */\n\nfunction useMediaQueryOld(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  var supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n\n  var _React$useState = React.useState(function () {\n    if (noSsr && supportMatchMedia) {\n      return matchMedia(query).matches;\n    }\n\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    } // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n\n\n    return defaultMatches;\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      match = _React$useState2[0],\n      setMatch = _React$useState2[1];\n\n  useEnhancedEffect(function () {\n    var active = true;\n\n    if (!supportMatchMedia) {\n      return undefined;\n    }\n\n    var queryList = matchMedia(query);\n\n    var updateMatch = function updateMatch() {\n      // Workaround Safari wrong implementation of matchMedia\n      // TODO can we remove it?\n      // https://github.com/mui/material-ui/pull/17315#issuecomment-528286677\n      if (active) {\n        setMatch(queryList.matches);\n      }\n    };\n\n    updateMatch(); // TODO: Use `addEventListener` once support for Safari < 14 is dropped\n\n    queryList.addListener(updateMatch);\n    return function () {\n      active = false;\n      queryList.removeListener(updateMatch);\n    };\n  }, [query, matchMedia, supportMatchMedia]);\n  return match;\n} // eslint-disable-next-line no-useless-concat -- Workaround for https://github.com/webpack/webpack/issues/14814\n\n\nvar maybeReactUseSyncExternalStore = React['useSyncExternalStore' + ''];\n\nfunction useMediaQueryNew(query, defaultMatches, matchMedia, ssrMatchMedia) {\n  var getDefaultSnapshot = React.useCallback(function () {\n    return defaultMatches;\n  }, [defaultMatches]);\n  var getServerSnapshot = React.useMemo(function () {\n    if (ssrMatchMedia !== null) {\n      var _ssrMatchMedia = ssrMatchMedia(query),\n          matches = _ssrMatchMedia.matches;\n\n      return function () {\n        return matches;\n      };\n    }\n\n    return getDefaultSnapshot;\n  }, [getDefaultSnapshot, query, ssrMatchMedia]);\n\n  var _React$useMemo = React.useMemo(function () {\n    if (matchMedia === null) {\n      return [getDefaultSnapshot, function () {\n        return function () {};\n      }];\n    }\n\n    var mediaQueryList = matchMedia(query);\n    return [function () {\n      return mediaQueryList.matches;\n    }, function (notify) {\n      // TODO: Use `addEventListener` once support for Safari < 14 is dropped\n      mediaQueryList.addListener(notify);\n      return function () {\n        mediaQueryList.removeListener(notify);\n      };\n    }];\n  }, [getDefaultSnapshot, matchMedia, query]),\n      _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n      getSnapshot = _React$useMemo2[0],\n      subscribe = _React$useMemo2[1];\n\n  var match = maybeReactUseSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n  return match;\n}\n\nexport default function useMediaQuery(queryInput) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var theme = useTheme(); // Wait for jsdom to support the match media feature.\n  // All the browsers MUI support have this built-in.\n  // This defensive check is here for simplicity.\n  // Most of the time, the match media logic isn't central to people tests.\n\n  var supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n\n  var _getThemeProps = getThemeProps({\n    name: 'MuiUseMediaQuery',\n    props: options,\n    theme: theme\n  }),\n      _getThemeProps$defaul = _getThemeProps.defaultMatches,\n      defaultMatches = _getThemeProps$defaul === void 0 ? false : _getThemeProps$defaul,\n      _getThemeProps$matchM = _getThemeProps.matchMedia,\n      matchMedia = _getThemeProps$matchM === void 0 ? supportMatchMedia ? window.matchMedia : null : _getThemeProps$matchM,\n      _getThemeProps$ssrMat = _getThemeProps.ssrMatchMedia,\n      ssrMatchMedia = _getThemeProps$ssrMat === void 0 ? null : _getThemeProps$ssrMat,\n      noSsr = _getThemeProps.noSsr;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof queryInput === 'function' && theme === null) {\n      console.error(['MUI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n    }\n  }\n\n  var query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n  query = query.replace(/^@media( ?)/m, ''); // TODO: Drop `useMediaQueryOld` and use  `use-sync-external-store` shim in `useMediaQueryNew` once the package is stable\n\n  var useMediaQueryImplementation = maybeReactUseSyncExternalStore !== undefined ? useMediaQueryNew : useMediaQueryOld;\n  var match = useMediaQueryImplementation(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue({\n      query: query,\n      match: match\n    });\n  }\n\n  return match;\n}","map":{"version":3,"names":["React","getThemeProps","useThemeWithoutDefault","useTheme","useEnhancedEffect","useMediaQueryOld","query","defaultMatches","matchMedia","ssrMatchMedia","noSsr","supportMatchMedia","window","useState","matches","match","setMatch","active","undefined","queryList","updateMatch","addListener","removeListener","maybeReactUseSyncExternalStore","useMediaQueryNew","getDefaultSnapshot","useCallback","getServerSnapshot","useMemo","mediaQueryList","notify","getSnapshot","subscribe","useMediaQuery","queryInput","options","theme","name","props","process","env","NODE_ENV","console","error","join","replace","useMediaQueryImplementation","useDebugValue"],"sources":["/Users/jalenjohnson/Desktop/ReactPortfolio/fitness-tracker/node_modules/@mui/material/esm/useMediaQuery/useMediaQuery.js"],"sourcesContent":["import * as React from 'react';\nimport { getThemeProps, useThemeWithoutDefault as useTheme } from '@mui/system';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\n/**\n * @deprecated Not used internally. Use `MediaQueryListEvent` from lib.dom.d.ts instead.\n */\n\nfunction useMediaQueryOld(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n  const [match, setMatch] = React.useState(() => {\n    if (noSsr && supportMatchMedia) {\n      return matchMedia(query).matches;\n    }\n\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    } // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n\n\n    return defaultMatches;\n  });\n  useEnhancedEffect(() => {\n    let active = true;\n\n    if (!supportMatchMedia) {\n      return undefined;\n    }\n\n    const queryList = matchMedia(query);\n\n    const updateMatch = () => {\n      // Workaround Safari wrong implementation of matchMedia\n      // TODO can we remove it?\n      // https://github.com/mui/material-ui/pull/17315#issuecomment-528286677\n      if (active) {\n        setMatch(queryList.matches);\n      }\n    };\n\n    updateMatch(); // TODO: Use `addEventListener` once support for Safari < 14 is dropped\n\n    queryList.addListener(updateMatch);\n    return () => {\n      active = false;\n      queryList.removeListener(updateMatch);\n    };\n  }, [query, matchMedia, supportMatchMedia]);\n  return match;\n} // eslint-disable-next-line no-useless-concat -- Workaround for https://github.com/webpack/webpack/issues/14814\n\n\nconst maybeReactUseSyncExternalStore = React['useSyncExternalStore' + ''];\n\nfunction useMediaQueryNew(query, defaultMatches, matchMedia, ssrMatchMedia) {\n  const getDefaultSnapshot = React.useCallback(() => defaultMatches, [defaultMatches]);\n  const getServerSnapshot = React.useMemo(() => {\n    if (ssrMatchMedia !== null) {\n      const {\n        matches\n      } = ssrMatchMedia(query);\n      return () => matches;\n    }\n\n    return getDefaultSnapshot;\n  }, [getDefaultSnapshot, query, ssrMatchMedia]);\n  const [getSnapshot, subscribe] = React.useMemo(() => {\n    if (matchMedia === null) {\n      return [getDefaultSnapshot, () => () => {}];\n    }\n\n    const mediaQueryList = matchMedia(query);\n    return [() => mediaQueryList.matches, notify => {\n      // TODO: Use `addEventListener` once support for Safari < 14 is dropped\n      mediaQueryList.addListener(notify);\n      return () => {\n        mediaQueryList.removeListener(notify);\n      };\n    }];\n  }, [getDefaultSnapshot, matchMedia, query]);\n  const match = maybeReactUseSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n  return match;\n}\n\nexport default function useMediaQuery(queryInput, options = {}) {\n  const theme = useTheme(); // Wait for jsdom to support the match media feature.\n  // All the browsers MUI support have this built-in.\n  // This defensive check is here for simplicity.\n  // Most of the time, the match media logic isn't central to people tests.\n\n  const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n  const {\n    defaultMatches = false,\n    matchMedia = supportMatchMedia ? window.matchMedia : null,\n    ssrMatchMedia = null,\n    noSsr\n  } = getThemeProps({\n    name: 'MuiUseMediaQuery',\n    props: options,\n    theme\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof queryInput === 'function' && theme === null) {\n      console.error(['MUI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n    }\n  }\n\n  let query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n  query = query.replace(/^@media( ?)/m, ''); // TODO: Drop `useMediaQueryOld` and use  `use-sync-external-store` shim in `useMediaQueryNew` once the package is stable\n\n  const useMediaQueryImplementation = maybeReactUseSyncExternalStore !== undefined ? useMediaQueryNew : useMediaQueryOld;\n  const match = useMediaQueryImplementation(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue({\n      query,\n      match\n    });\n  }\n\n  return match;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}